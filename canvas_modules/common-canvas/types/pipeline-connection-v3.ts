/*
 * Copyright 2017-2024 Elyra Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { AppDataDef } from "./app-data-def";

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript --unreachableDefinitions
 * from https://github.com/elyra-ai/pipeline-schemas/blob/main/common-pipeline/pipeline-connection/pipeline-connection-v3-schema.json
 * It has been modified by hand, so run a diff if you need to update it.
 */

/**
 * Connection schema for pipelines in the Watson Data Platform
 */
export interface WatsonDataPlatformPipelineConnectionSchema {
  [k: string]: unknown;
}
/**
 * Details of the connection to use for a pipeline binding node.
 *
 * This interface was referenced by `WatsonDataPlatformPipelineConnectionSchema`'s JSON-Schema
 * via the `definition` "common_pipeline_connection_def".
 */
export interface CommonPipelineConnectionDef {
  /**
   * A name tag for disambiguating connections
   */
  name?: string;
  app_data?: AppDataDef;
  /**
   * A reference to a connection by ID.
   */
  ref: string;
  /**
   * If ref is set, this refers to the ID of the catalog which contains the connection. If neither this attribute nor project_ref are specified, the connection will be assumed to exist in the project, space, or catalog which contains the pipeline.
   */
  catalog_ref?: string;
  /**
   * If ref is set, this refers to the ID of the project which contains the connection. If neither this attribute nor catalog_ref are specified, the connection will be assumed to exist in the project, space, or catalog which contains the pipeline.
   */
  project_ref?: string;
  /**
   * If ref is set, this refers to the ID of the space which contains the connection. If neither this attribute nor space_ref are specified, the connection will be assumed to exist in the project, space, or catalog which contains the pipeline.
   */
  space_ref?: string;
  /**
   * The properties for the connection. The specific properties allowed depend on the type of connection referenced.
   */
  properties?: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/**
 * Details of the data asset contained in a catalog or project to use for a pipeline binding node.
 *
 * This interface was referenced by `WatsonDataPlatformPipelineConnectionSchema`'s JSON-Schema
 * via the `definition` "common_pipeline_data_asset_def".
 */
export interface CommonPipelineDataAssetDef {
  app_data?: AppDataDef;
  /**
   * A reference to a data asset by ID.
   */
  ref?: string;
  /**
   * If ref is set, this refers to the ID of the catalog which contains the data asset. If neither this attribute nor project_ref are specified, the data asset will be assumed to exist in the project, space, or catalog which contains the pipeline.
   */
  catalog_ref?: string;
  /**
   * If ref is set, this refers to the ID of the project which contains the data asset. If neither this attribute nor catalog_ref are specified, the data asset will be assumed to exist in the project, space, or catalog which contains the pipeline.
   */
  project_ref?: string;
  /**
   * If ref is set, this refers to the ID of the space which contains the data asset. If neither this attribute nor space_ref are specified, the data asset will be assumed to exist in the project, space, or catalog which contains the pipeline.
   */
  space_ref?: string;
  /**
   * Properties controlling how the data asset is used.
   */
  properties?: {
    /**
     * The ID of the data asset attachment to use. If not specified and used as a source, the first suitable attachment found will be used. If not specified and used as a target, a new attachment will be created.
     */
    attachment_ref?: string;
    /**
     * Specifies the name of the data asset to read, create or update if ref is unset.
     */
    name?: boolean & string;
    /**
     * When used as a target, whether to update the data asset with the schema when a run completes or not (will be automatically updated if not supplied by caller).
     */
    no_write_schema?: boolean;
    /**
     * When used as a target, whether to update the data asset with the status when a run completes or not (will be automatically updated if not supplied by caller).
     */
    no_write_status?: boolean;
  } & {
    [k: string]: {
      [k: string]: unknown;
    };
  };
  [k: string]: unknown;
}
