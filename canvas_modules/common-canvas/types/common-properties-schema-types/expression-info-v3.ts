/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript
 * from https://github.com/elyra-ai/pipeline-schemas/blob/main/common-canvas/expression/expression-info-v3-schema.json
 * It has been modified by hand, so run a diff if you need to update it.
 */

import { ExpressionBuilderFunctionListSchema } from "./function-list-v3";
import { ResourceDefinition } from "./uihints-v3";

/**
 * Array of categories for the field dropdown menu
 *
 * @minItems 0
 */
export type FieldCategoriesDef = FieldCategoriesItemDef[];
/**
 * Array of table contents for each field category
 *
 * @minItems 0
 */
export type FieldTableInfoDef = FieldTableInfoItemDef[];

/**
 * Watson Data Platform Expression Builder Expression Info Schema for the Common Properties editor
 */
export interface ExpressionBuilderExpressionInfoSchema {
  functions?: ExpressionBuilderFunctionListSchema;
  /**
   * Metadata and content for field and value tables
   */
  fields?: {
    field_categories?: FieldCategoriesDef;
    field_table_info?: FieldTableInfoDef;
    [k: string]: unknown;
  };
  /**
   * Map of string resources.
   */
  resources?: {
    [k: string]: unknown;
  };
  /**
   * Controls if the validate schema link is shown
   */
  validateLink?: boolean;
  [k: string]: unknown;
}
/**
 * Metadata of a field dropdown menu item
 */
export interface FieldCategoriesItemDef {
  /**
   * Unique string to reference this category
   */
  id: string;
  /**
   * User-readable name of field category
   */
  label?: ResourceDefinition;
  /**
   * Title of the field column
   */
  field_columns: {
    field_column_info: ColumnHeaderLabel;
    value_column_info: ColumnHeaderLabel;
    additional_column_info?: AdditionalInfoHeaderLabel;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/**
 * Info about columns headers
 */
export interface ColumnHeaderLabel {
  label?: ResourceDefinition;
  description?: ResourceDefinition;
  [k: string]: unknown;
}
/**
 * Info about info columns headers
 */
export interface AdditionalInfoHeaderLabel {
  /**
   * Unique string to reference this info column
   */
  id: {
    [k: string]: unknown;
  };
  label?: ResourceDefinition;
  [k: string]: unknown;
}
/**
 * Wrapper for all the field/value groups of a single category
 */
export interface FieldTableInfoItemDef {
  /**
   * Unique string to reference this category
   */
  field_category_ref: string;
  /**
   * Array of all the field/value groups of a single category
   *
   * @minItems 0
   */
  field_value_groups?: FieldValueGroupsItemDef[];
  [k: string]: unknown;
}
/**
 * A field entry, and all associated values and informational columns
 */
export interface FieldValueGroupsItemDef {
  /**
   * Unique identifier for this field entry
   */
  id: string;
  /**
   * A list of all values that are associated with this field
   *
   * @minItems 0
   */
  values?: ValueDef[];
  /**
   * Value type that will be used in the value array. Can be a primitive type (string, integer, double, date, time, timestamp, binary, boolean, or other)
   */
  value_type?: string;
  /**
   * A list of all informational column entries that are associated with this field
   *
   * @minItems 0
   */
  additional_column_entries?: AdditionalInfoItem[];
  /**
   * Object/primitive type used in the info array (string, integer, double, date, time, timestamp, binary, boolean, or custom types)
   */
  additional_column_type?: string;
  [k: string]: unknown;
}
/**
 * A wrapper a value of any basic type
 */
export interface ValueDef {
  value:
    | string
    | number
    | boolean
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | null;
  [k: string]: unknown;
}
/**
 * A wrapper a value of any basic type and a column id
 */
export interface AdditionalInfoItem {
  /**
   * A string that uniquely identifies this column,
   */
  id: string;
  value:
    | string
    | number
    | boolean
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | null;
  [k: string]: unknown;
}
