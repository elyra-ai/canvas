/*
 * Copyright 2017-2024 Elyra Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript --unreachableDefinitions
 * from https://github.com/elyra-ai/pipeline-schemas/blob/main/common-pipeline/parameters/parametersets-v3-schema.json
 * It has been modified by hand, so run a diff if you need to update it.
 */

import { ParamPropertyDef } from './parameters-v3';

/**
 * Parametersets schema for pipelines in the Watson Data Platform
 */
export interface WatsonDataPlatformPipelineParametersetsSchema {
  /**
   * Refers to the JSON schema used to validate documents of this type
   */
  json_schema?: 'https://api.dataplatform.ibm.com/schemas/common-pipeline/parameters/parametersets-v3-schema.json';
  paramset: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/**
 * The parameter set definition referenced within a pipleine.
 *
 * This interface was referenced by `WatsonDataPlatformPipelineParametersetsSchema`'s JSON-Schema
 * via the `definition` "paramset_def".
 */
export interface ParamsetDef {
  /**
   * The disambiguating name of the parameter set.
   */
  name: string;
  /**
   * The description of the parameter set.
   */
  description?: string;
  /**
   * @minItems 0
   */
  parameters?: ParamPropertyDef[];
  [k: string]: unknown;
}
/**
 * Refers to the external parameter set.
 *
 * This interface was referenced by `WatsonDataPlatformPipelineParametersetsSchema`'s JSON-Schema
 * via the `definition` "paramset_ref".
 */
export interface ParamsetRef {
  /**
   * The disambiguating name of the parameter set.
   */
  name?: string;
  /**
   * A reference to a parameter set by ID.
   */
  ref: string;
  /**
   * If ref is set, this refers to the ID of the catalog which contains the parameter set. If neither this attribute nor project_ref and space_ref are specified, the parameter set will be assumed to exist in the project, catalog or space which contains the pipeline.
   */
  catalog_ref?: string;
  /**
   * If ref is set, this refers to the ID of the project which contains the parameter set. If neither this attribute nor catalog_ref and space_ref are specified, the parameter set will be assumed to exist in the project, catalog or space which contains the pipeline.
   */
  project_ref?: string;
  /**
   * If ref is set, this refers to the ID of the space which contains the parameter set. If neither this attribute nor catalog_ref and project_ref are specified, the parameter set will be assumed to exist in the project, catalog or space which contains the pipeline.
   */
  space_ref?: string;
  [k: string]: unknown;
}
