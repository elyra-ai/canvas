/*
 * Copyright 2017-2025 Elyra Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use "../../../carbon.scss";
@forward "./expression-builder/expression-builder";
@forward "./expression-toggle/expression-toggle";

.elyra-CodeMirror {
	.cm-editor {
		height: inherit;
		width: 100%;
		background: carbon.$field-02;
		color: carbon.$text-primary;

		.cm-gutters {
			border-right: none;
			background-color: inherit;
		}

		.cm-content {
			.cm-line {
				padding-left: carbon.$spacing-03;
				@include carbon.type-style("code-02");
			}
			.cm-placeholder {
				@include carbon.type-style("code-02");
			}
			.cm-cursor {
				border-left: 1px solid carbon.$text-primary;
			}
			.cm-lineNumbers .cm-gutterElement {
				@include carbon.type-style("body-short-01");
			}
		}

		.cm-activeLine {
			background-color: carbon.$background-selected; // works for both dark n light
		}
		.cm-activeLineGutter {
			background-color: carbon.$text-placeholder;
			color: carbon.$text-primary;
		}
		&.cm-focused .cm-selectionBackground, ::selection {
			/* stylelint-disable-next-line declaration-no-important */
			background: carbon.$support-info-inverse !important; // add !important to override the selected text style
		}
		.cm-tooltip-autocomplete {
			z-index: 1110;
			background: carbon.$field-02; // Background color of the autocompletion menu to support dark mode
			ul {
				white-space: normal; // Wraps the long autocompletion text on multiple lines
			}
		}
	}

	.cm-line .cm-keyword { color: carbon.$link-secondary; }

	.cm-line .cm-number { color: carbon.$text-secondary; }

	.cm-line .cm-def { color: carbon.$support-error; }

	.cm-line .cm-comment { color: carbon.$green-70; }

	.cm-line .cm-variable,
	.cm-line .cm-punctuation,
	.cm-line .cm-property,
	.cm-line .cm-operator {
		color: carbon.$text-primary;
	}

	.cm-line .cm-string { color: carbon.$button-danger-active; }

	.cm-line .cm-meta { color: carbon.$layer-01; }
}

.elyra-CodeMirror.disabled {
	.cm-editor {
		pointer-events: none;
	}
}

.elyra-CodeMirror.warning {
	.cm-editor {
		border: carbon.$spacing-01 solid carbon.$support-warning;
	}
}

.elyra-CodeMirror.error {
	.cm-editor {
		border: carbon.$spacing-01 solid carbon.$support-error;
	}
}

.properties-expression-editor {
	border: 1px solid carbon.$layer-accent-01;
	&.error, &.warning {
		border: 0;
	}
}

.properties-light-disabled {
	.elyra-CodeMirror .cm-editor {
		background: carbon.$field-01;
	}
}

.properties-expression-link-container {
	display: flex;
	justify-content: space-between;

	.properties-expression-validate {
		display: flex;
		flex-direction: row-reverse;
		.icon {
			margin: carbon.$spacing-01;
			svg {
				height: 10px;
				width: 10px;
			}
		}
		.validateLink {
			min-height: carbon.$spacing-07;
			padding: carbon.$spacing-02;
		}
	}
}

.properties-expression-header {
	position: relative;
	height: carbon.$spacing-07;
	.properties-expression-title {
		@include carbon.type-style("label-01");
		position: absolute;
		bottom: 5px;
		left: 0;
	}
	.properties-expression-link-container {
		position: absolute;
		bottom: 0;
		right: 0;
	}
}

.properties-expression-button {
	padding: carbon.$spacing-02;
	svg {
		height: 20px;
		width: 20px;
	}
}

.properties-code-header {
	display: flex;
	justify-content: flex-end;
}
