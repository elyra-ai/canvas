/*
 * Copyright 2017-2024 Elyra Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

$toolbar-button-height: 41px; // Allow one extra pixel for the toolbar border
$panel-border-width: 1px;
$panel-border-color: $border-subtle-01;

/* Default layout for common-canvas components where the canvas appears below
 * the toolbar and right-side flyout appears to the right of the toolbar and
 * compresses the toolbar when it is opened. These are used when the config field
 * enableRightFlyoutUnderToolbar is false. */

.common-canvas {
	height: 100%;
	width: 100%;
	cursor: default;
	display: flex;
	position: relative;
	overflow-x: auto;
	overflow-y: hidden;
	// Set the font explicitly to 14px to shrink them across the entire canvas
	font-size: 14px;
}

.common-canvas-drop-div {
	height: 100%;
	width: 100%;
	min-width: inherit;
	cursor: default;
	overflow: hidden;
	position: relative; // This allows the State Tag to have positio: absolute
}

.left-flyout-panel,
.right-flyout-panel {
	// This combination of height and min-height enable scrolling in the child panel,
	// I believe this is because it sets a specific height on the CSS grid cell,
	// so the contents of the panel can adjust themselves to the height accordingly.
	height: 0;
	min-height: 100%;

	user-select: none; /* Prevent elements from being selectable */
	background-color: $layer-01;
}

.bottom-panel {
	display: flex;
	flex-direction: column;
	border-top: $panel-border-width solid $panel-border-color;
	// Make sure the bottom panel appear above the empty canvas content
	// (when displayed) in the flow editor div.
	z-index: 1;
}

.bottom-panel-drag {
	border-top: $panel-border-color;
	cursor: row-resize;
	flex: 0 0 $spacing-01;
	border-top-width: 1px;
	background: $layer-01;
	transition: all 0.2s ease-in;
	&:hover {
		background: $button-tertiary;
	}
}

.bottom-panel-contents {
	background-color: $layer-01;
	width: 100%;
	user-select: none;
	height: 100%;
}

.top-panel {
	display: flex;
	flex-direction: column;
	border-bottom: $panel-border-width solid $panel-border-color;
}

.common-canvas-toolbar {
	border-bottom: $toolbar-divider-width solid $border-strong-01;
}

.text-toolbar {
	.toolbar-div {
		animation: raise-toolbar 0.3s linear;
		border: 1px solid $border-strong-01;
	}
}

// Below, we have to override the Carbon button's focus highlighting in the
// context toolbar to get a complete border around the overflow icon. This is
// necessary because the width allocated to the context toolbar is reduced by
// five pixels to force the overflow icon to be displayed.
.context-toolbar  {
	.toolbar-overflow-item {
		button:focus {
			border-color: transparent;
			box-shadow: inset $spacing-01 $spacing-01 $focus, inset -6px -2px $focus;
		}
	}
}

.text-toolbar,
.context-toolbar  {
	position: absolute;
	// For text toolbar - top and left will be calculated and set programmatically
	// For context toolbar - top, left and width will be calculated and set programmatically.
	// 'width' is set for the context toolbar because the overflow button must be forced to
	// appear by setting the width approriately (see cc-context-toolbar.jsx).
	top: 0;
	left: 0;
	width: fit-content;
	// This bottom border allows the canvas context toolbar to disappear, if the mouse
	// cursor is immediately moved away from the toolbar, after it opens. That's because,
	// when the toolbar opens, the border will be underneath the mouse cursor and so the
	// mouseLeave event is fired when the cursor is moved away.
	border-bottom: $spacing-02 solid transparent;

	.toolbar-div {
		// Position the div 'relative' to text-toolbar so we can animate its
		// opening by adjusting its 'height' and 'top' values.
		position: relative;
		left: 0;
		padding-right: 0px;

		.toolbar-left-bar {
			padding-right: 0px;
		}
	}
}

.text-toolbar  {
	.toolbar-div {
		animation: raise-toolbar 0.3s linear;
	}
}


// Causes the text toolbar to animate upwards from the top of the comment
// to its final position
@keyframes raise-toolbar {
	from {
		height: 0;
		top: $toolbar-button-height;
	}
	to {
		height: $toolbar-button-height;
		top: 0;
	}
}

/* Styles for Grid layout of Common Canvas panels: toolbar panel, top panel
 * bottom panel, left flyout and right flyout. Left flyout and right flyout
 * can appear under the toolbar or at the side of the toolbar.
 */

.common-canvas-grid-vertical {
	height: 100%;
	width: 100%;
	display: grid;
	/* grid-template-rows is set dynamically in cc-panels.jsx */
	grid-template-columns: 1fr;
}

.common-canvas-grid-horizontal {
	height: 100%;
	width: 100%;
	display: grid;
	grid-template-rows: 1fr;
	/* grid-template-columns is set dynamically in cc-panels.jsx */
}

/* Styles for empty canvas objects */

.empty-canvas {
	position: absolute;
	line-height: 1.5;
	left: 50%;
	top: 48%;
	cursor: default;
	transform: translate(-50%, -50%);
	pointer-events: none;
}

.empty-canvas-image {
	color: $text-placeholder; // Picked up by fill attribute in the icon.
	opacity: 0.75;
	display: block;
	text-align: center;
	& svg {
		width: 175px;
		height: 175px;
	}
}

.empty-canvas-text1 {
	@include type-style("productive-heading-03");
	padding-top: $spacing-02;
	color: $text-secondary;
	display: block;
	text-align: center;
}

.empty-canvas-text2 {
	@include type-style("body-short-02");
	padding-top: $spacing-03;
	color: $text-secondary;
	display: block;
	text-align: center;
}

/* Styles for 'Return to previous flow' button - shown for full-page sub-flows */

.return-to-previous {
	position: absolute;
	left: 15px;
	top: 15px;
	background-color: $background;
	& button {
		background-color: $background;
		padding-right: 20px;
	}
	& button:hover,
	& button:focus {
		background-color: $layer-accent-01;
		color: $button-primary;
	}
	& .return-to-previous-content {
		display: flex;
		background-color: transparent;
		& svg {
			margin-top: 1px;
			margin-left: 4px;
			margin-right: 7px;
		}
		& span {
			padding-bottom: $spacing-01;
		}
	}
}

/* Styles for drop zone canvas objects */

.dropzone-canvas {
	position: absolute;
	line-height: 1.5;
	width: 100%;
	height: 100%;
	left: 50%;
	top: 50%;
	cursor: default;
	transform: translate(-50%, -50%);
	pointer-events: all;
	background-color: $background;
	opacity: 0.75;
}

.dropzone-canvas-rect {
	position: absolute;
	top: 30px;
	left: 30px;
	right: 30px;
	bottom: 30px;
	border-color: $border-strong-01;
	border-style: dashed;
	border-width: $spacing-01;
}

.toolbar-item.notificationCounterIcon {
	&.error .toolbar-icon .dot {
		fill: $support-error;
	}
	&.warning .toolbar-icon .dot {
		fill: $support-warning;
	}
	&.success .toolbar-icon .dot {
		fill: $support-success;
	}
	&.info .toolbar-icon .dot {
		fill: $support-info;
	}
}

.state-tag {
	@include type-style("productive-heading-01");
	display: flex;
	align-items: center;
	color: $text-inverse;
	background-color: $background-inverse;
	width: fit-content;
	height: $spacing-08;
	position: absolute; /* Positioned relative to the common-canvas-drop-div */
	left: 50%;
	top: $spacing-05;
	transform: translate(-50%, 0%);
	border-radius: 20px;
	padding: 9px 0;
	user-select: none; /* Prevent elements from being selectable */

	svg {
		color: $text-inverse;
		margin-left: 14px;
	}

	span {
		margin: 0 $spacing-05 0 10px;
	}
}
