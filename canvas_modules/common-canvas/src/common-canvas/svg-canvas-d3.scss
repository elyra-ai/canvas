/*
 * Copyright 2017-2022 Elyra Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Canvas background color
$canvas-background-color: $ui-background;

// Region selection colors
$region-selector-stroke-color: $ui-05;
$region-selector-fill-color: $ui-03;

// 'Back to previous flow' control colors
$back-to-previous-flow-box-color: $interactive-01;
$back-to-previous-flow-box-fill-hover: $ui-03;

// Node colors
$node-body-stroke: $ui-05;
$node-body-fill: $ui-01;

$node-body-stroke-hover: $ui-03;
$node-body-fill-hover: $hover-selected-ui;

$node-selection-color: $inverse-link;

$node-decoration-outline: $ui-05;

$node-super-expand-icon-color: $brand-01;
$node-super-expand-icon-background-hover-color: $ui-03;

$node-ellipsis-color: $brand-01;
$node-ellipsis-background-hover-color: $ui-03;

$node-error-color: $support-01; // Error red
$node-warning-color: $support-03; // Warning yellow

// Node label properties
$node-label-color: $text-01;
$node-label-font-size: 12px;
$node-label-font-weight: 500;
$node-label-display-border: 2px;
$node-label-entry-border: 6px;
$node-label-edit-icon-hover-color: $ui-03;

// Output port styles

$node-port-output-stroke-color: $inverse-02;
$node-port-output-fill-color: $node-body-fill;

$node-port-output-connected-stroke-color: $inverse-02;
$node-port-output-connected-fill-color: $inverse-02;

$node-port-output-hover-stroke: $inverse-02;
$node-port-output-hover-fill: $inverse-02;

// Input port styles

$node-port-input-stroke-color: $inverse-02;
$node-port-input-fill-color: $node-body-fill;

$node-port-input-connected-stroke-color: $node-body-fill;
$node-port-input-connected-fill-color: $node-body-fill;

$node-port-input-connected-super-binding-stroke-color: $inverse-02;
$node-port-input-connected-super-binding-fill-color: $ui-02;

$node-port-input-arrow-connected-stroke-color: $inverse-02;
$node-port-input-arrow-connected-fill-color: transparent;

// Comment colors
$comment-outline-color: $active-light-ui;
$comment-outline-hover-color: $inverse-hover-ui;
$comment-fill-color: $white-0;
$comment-text-color: $gray-100;

// Comment properties
$comment-text-font-size: 12px;
$comment-text-font-weight: 400;
$comment-text-font-family: "ibm-plex-sans", Helvetica Neue, Arial, sans-serif;
$comment-text-line-height: 14px;
$comment-text-display-border: 8px;
$comment-text-entry-border: $comment-text-display-border - 2px; // Remove 2px to allow for focus border

// Link colors
$comment-link-color: $ui-04;
$object-link-color: $ui-05; // Used for association links for a regular data flow canvas
$association-link-color: $ui-04; // Used for association links when config.enableAssocLinkType === ASSOC_RIGHT_SIDE_CURVE.
$data-link-color: $inverse-link;
$link-highlight-color: $support-04;

/* Canvas styles */

.d3-svg-canvas-div {
	cursor: default;
	height: 100%;
	background-color: $canvas-background-color;
}

.d3-svg-canvas-div:focus {
	outline: none;
}

.d3-foreign-object-ghost-label,
.d3-foreign-object-node-label,
.d3-foreign-object-dec-label,
.d3-foreign-object-comment-text,
.d3-foreign-object-text-entry {
	// Don't handle events - let objects inside foreign object handle them.
	pointer-events: none;
	// Allows the focus highlight to be visible on FF and Safari
	overflow: visible;
}

// Declare our own focus highlighting for text entry.
@mixin d3-text-entry-focus-mixin {
	// Supress the default focus highlighting with non-carbon color and round corners.
	outline: none;
	// Add our own focus highlighting with our own color and square corners
	box-shadow: 0 0 0 2px $interactive-01;
}

/* Pull-out region rectangle used for object selection */

.d3-region-selector {
	stroke: $region-selector-stroke-color;
	fill: $region-selector-fill-color;
	opacity: 0.5;
}

/* Background rectangle for sub-flow display inside supernodes */

.d3-svg-background {
	fill: $canvas-background-color;
}

.d3-canvas-underlay {
	fill: $ui-03;
}

/* Temporary overlay to display altered pointer cursor styles on dynamic drag operations */

.d3-temp-cursor-overlay {
	fill: transparent;
}

/* Back to Previous Flow control */

.d3-back-to-previous-flow-box {
	stroke: $back-to-previous-flow-box-color;
	fill: $canvas-background-color;
}

.d3-back-to-previous-flow-box[data-pointer-hover="yes"] {
	stroke: $back-to-previous-flow-box-color;
	fill: $back-to-previous-flow-box-fill-hover;
}

.d3-back-to-previous-flow-text {
	font-size: 14px;
	font-weight: 400;
	fill: $back-to-previous-flow-box-color;
}

.d3-back-to-previous-flow-box, .d3-back-to-previous-flow-text {
	cursor: pointer;
}

/* Ghost div and node used when dragging a node from the palette */

.d3-ghost-div {
	position: absolute;
	left: 0;
	top: 0;
	z-index: -10000; // Make sure ghost image is below the SVG area so it is hidden.
}

.d3-ghost-node {
	fill: $highlight;
}

/* Node and comment styles */

.d3-node-group.d3-draggable,
.d3-comment-group.d3-draggable {
	cursor: default;
}

.d3-node-group-translucent {
	opacity: 0.5;
}

.d3-node-sizing,
.d3-comment-sizing {
	fill: transparent;
	stroke: transparent;
}

/* Node styles  */

.d3-node-body-outline {
	stroke: $node-body-stroke;
	stroke-width: 1;
	fill: $node-body-fill;
}

.d3-node-group:hover > .d3-node-body-outline {
	stroke: $node-body-stroke-hover;
	stroke-width: 1;
	fill: $node-body-fill-hover;
}

.d3-node-unavailable .d3-node-body-outline,
.d3-node-unavailable .d3-node-label,
.d3-node-unavailable svg path {
	stroke: $disabled-02;
	fill: $disabled-03;
	color: $disabled-02;
}

.d3-node-selection-highlight {
	stroke-width: 0;
	fill: transparent;
	pointer-events: none;
}

.d3-node-selection-highlight[data-selected="yes"] {
	stroke: $node-selection-color;
	stroke-dasharray: none; /* Solid line */
	stroke-width: 5;
	fill: transparent;
}

/* Used for debugging node image position. */
.d3-node-image-outline {
	stroke: $node-body-stroke;
	stroke-width: 1;
	fill: $node-body-fill;
}

@mixin d3-node-label-mixin {
	color: $node-label-color;
	font-size: $node-label-font-size;
	font-weight: $node-label-font-weight;
	resize: none;
	border-style: solid;
	border-color: transparent;
	padding: 0; // Makes padding consistent for div and text area (overrides default 2px padding for text areas)
	width: 100%;
	height: 100%;
	overflow: hidden;
	line-height: 105%;  /* Set so that entry text is displayed the same as display text */
	letter-spacing: 0.16px; /* Keeps letter spacing the same as before changing labels to use foreignObject */
}

/* Style for node label text display. */
.d3-node-label {
	@include d3-node-label-mixin;
	border-width: $node-label-display-border;
	/* Prevent node label text being highlighted on double click etc */
	user-select: none;

	& span {
		pointer-events: auto; /* Override the pointer-events: none on the foreignObject and div */
	}
}

/* Style for node label text entry when shown in an HTML textarea control. */
.d3-node-label-entry {
	@include d3-node-label-mixin;
	background-color: $field-01;
	border-width: $node-label-entry-border;
	pointer-events: auto; /* Override the pointer-events: none on the foreignObject and div */

	&:focus {
		@include d3-text-entry-focus-mixin;
	}
}

/* Node highlight when end of new link line is over, or approaching, the node */

.d3-node-group[data-new-link-over="yes"] {
	.d3-node-selection-highlight {
		stroke: $interactive-01;
		stroke-dasharray: 4;
		stroke-width: 2;
		fill: $ui-01;
		pointer-events: none;
	}
}

/* Node styles - Error indication */

.d3-node-error-label {
	color: $node-error-color;
}

.d3-node-warning-label {
	color: $node-warning-color;
}

/* Common styles for node labels and node/link decoration labels */

.d3-label-single-line {
	white-space: nowrap;
	text-overflow: ellipsis;
}

.d3-label-multi-line {
	white-space: pre-wrap;
	word-wrap: normal;
	word-break: break-word;

	// These three properties force a ... to be displayd at the end of the
	// second line if the text is greater than two lines. -webkit-line-clamp
	// can be overriden by the application to support more than 2 lines.
	display: -webkit-box; // stylelint-disable-line value-no-vendor-prefix
	-webkit-line-clamp: 2;
	-webkit-box-orient: vertical;

	& .d3-label-full {
		display: inline-block;
	}
}

.d3-label-multi-line-entry {
	white-space: pre-wrap;
	word-wrap: normal;
	word-break: break-word;

	& .d3-label-full {
		display: inline-block;
	}
}

.d3-label-center {
	text-align: center;
}

.d3-label-edit-icon-group {
	.d3-label-edit-icon-background1 {
		fill: transparent;
	}

	.d3-label-edit-icon-background2 {
		fill: $canvas-background-color;
	}

	&:hover {
		.d3-label-edit-icon-background2 {
			fill: $node-label-edit-icon-hover-color;
		}
	}

	& svg {
		// These properties will pass the color to icon paths in an SVG icon provided
		// the icon doesn't have any hard coded fill color set.
		fill: currentColor;
		color: $icon-01;
	}
}

/* Node decorations styles */

.d3-node-dec-outline,
.d3-link-dec-outline {
	fill: transparent;
	stroke: $node-decoration-outline;
	stroke-width: 1;
	stroke-dasharray: 0;
}

@mixin d3-dec-label-mixin {
	color: $node-label-color;
	font-size: $node-label-font-size;
	font-weight: $node-label-font-weight;
	resize: none;
	border-style: solid;
	border-color: transparent;
	padding: 0; // Makes padding consistent for div and text area (overrides default 2px padding for text areas)
	width: 100%;
	height: 100%;
	overflow: hidden;
	line-height: 105%;  /* Set so that entry text is displayed the same as display text */
	letter-spacing: 0.16px; /* Keeps letter spacing the same as before changing labels to use foreignObject */
}

.d3-node-dec-label,
.d3-link-dec-label {
	@include d3-dec-label-mixin;
	border-width: $node-label-display-border;
	/* Prevent node label text being highlighted on double click etc */
	user-select: none;

	& span {
		pointer-events: auto; /* Override the pointer-events: none on the foreignObject and div */
	}
}

.d3-dec-label-entry {
	@include d3-dec-label-mixin;
	background-color: $field-01;
	border-width: $node-label-entry-border;
	pointer-events: auto; /* Override the pointer-events: none on the foreignObject and div */

	&:focus {
		@include d3-text-entry-focus-mixin;
	}
}

.d3-node-dec-path,
.d3-link-dec-path {
	fill: $node-decoration-outline;
	stroke: $node-decoration-outline;
	stroke-width: 1;
	/* Prevent elements from being selectable */
	/* This stops it being dragged incorrectly.*/
	user-select: none;
}

.d3-node-dec-image,
.d3-link-dec-image {
	stroke-width: 1;
	stroke-dasharray: 0; // Override the dasharray from the link line
	// These properties will pass the color to icon paths in an SVG icon provided
	// the icon doesn't have any hard coded fill color set.
	fill: currentColor;
	color: $icon-01;
}

/* Node ellipsis styles */

.d3-node-ellipsis-group {
	.d3-node-ellipsis-background {
		fill: transparent;
		stroke-width: 0;
		cursor: context-menu;
	}

	.d3-node-ellipsis {
		fill: $node-ellipsis-color;
		stroke-width: 0;
		cursor: context-menu;
	}

	&:hover {
		.d3-node-ellipsis-background {
			fill: $node-ellipsis-background-hover-color;
		}
	}
}

/* Super node styles */

.d3-node-super-expand-icon-group {
	.d3-node-super-expand-icon-background {
		fill: transparent;
		stroke-width: 0;
		cursor: context-menu;
	}

	.d3-node-super-expand-icon {
		fill: $node-super-expand-icon-color;
		stroke-width: 0;
		cursor: context-menu;
	}

	&:hover {
		.d3-node-super-expand-icon-background {
			fill: $node-super-expand-icon-background-hover-color;
		}
	}
}

/* Error indicator */
.d3-error-circle {
	stroke: $canvas-background-color;
	stroke-width: 2;
	fill: $node-error-color;
}

/* Warning indicator */
.d3-warning-circle {
	stroke: $canvas-background-color;
	stroke-width: 2;
	fill: $node-warning-color;
}

/* Invisible Error indicator */
.d3-error-circle-off {
	display: none;
}

/* Styles for ports */

.d3-node-port-output {
	stroke: $node-port-output-stroke-color;
	fill: $node-port-output-fill-color;
	stroke-width: 1.25;
}

.d3-node-port-output[connected="yes"] {
	stroke: $node-port-output-connected-stroke-color;
	fill: $node-port-output-connected-fill-color;
	stroke-width: 2;
}

.d3-node-port-output:hover {
	stroke: $node-port-output-hover-stroke;
	fill: $node-port-output-hover-fill;
}

.d3-node-port-input {
	stroke: $node-port-input-stroke-color;
	fill: $node-port-input-fill-color;
	stroke-width: 1.25;
}

.d3-node-port-input-assoc,
.d3-node-port-output-assoc {
	stroke: $node-port-input-stroke-color;
	fill: $node-port-input-fill-color;
	stroke-width: 1.25;
}

.d3-node-port-input-assoc:hover,
.d3-node-port-output-assoc:hover {
	stroke: $node-port-output-hover-stroke;
	fill: $node-port-output-hover-fill;
}

.d3-node-port-input[connected="yes"] {
	stroke: $node-port-input-connected-stroke-color;
	fill: $node-port-input-connected-fill-color;
	stroke-width: 1;

	.d3-node-port-input-arrow {
		stroke: $node-port-input-arrow-connected-stroke-color;
		stroke-width: 1;
		fill: $node-port-input-arrow-connected-fill-color;
	}
}

.d3-node-port-input[connected="yes"][isSupernodeBinding="yes"] {
	stroke: $node-port-input-connected-super-binding-stroke-color;
	fill: $node-port-input-connected-super-binding-fill-color;
	stroke-width: 1;
}

.d3-node-port-input-arrow {
	stroke: transparent;
	fill: transparent;
}

/* New connection dynamic line styles. */

.d3-new-connection-line[linkType="nodeLink"],
.d3-new-connection-line[linkType="associationLink"] {
	stroke: $data-link-color;
	stroke-width: 2;
	stroke-dasharray: 10 10;
	fill: none;
}

.d3-new-connection-start[linkType="nodeLink"],
.d3-new-connection-start[linkType="associationLink"] {
	stroke: $data-link-color;
	fill: $canvas-background-color;
}

.d3-new-connection-guide[linkType="nodeLink"],
.d3-new-connection-guide[linkType="associationLink"] {
	stroke: $data-link-color;
	fill: $data-link-color;
}

/* New connection dynamic line styles for comment links */

.d3-new-connection-line[linkType="commentLink"] {
	stroke: $comment-link-color;
	stroke-width: 1;
	stroke-dasharray: 10 10;
	fill: none;
}

.d3-new-connection-guide[linkType="commentLink"] {
	stroke: $comment-link-color;
	stroke-width: 4;
	fill: $comment-link-color;
}

.d3-new-connection-arrow[linkType="commentLink"] {
	stroke: $comment-link-color;
	stroke-width: 2;
	fill: $comment-link-color;
}

.d3-comment-port-circle {
	stroke: $comment-link-color;
	stroke-width: 2;
	fill: $comment-link-color;
}

/* Comment styles */

.d3-comment-group:hover {
	.d3-comment-rect {
		stroke: $comment-outline-hover-color
	}
}

/* Style for default comment background rectangle */
.d3-comment-rect {
	fill: $comment-fill-color;
	stroke: $comment-outline-color;
	stroke-width: 1;

	/* Prevent elements from being selectable */
	/* This stops it being dragged incorrectly. */
	user-select: none;
}

@mixin d3-comment-color-overrides($background-color) {
	.d3-comment-rect {
		fill: $background-color;
	}
	.d3-comment-entry {
		background-color: $background-color;
		color: $gray-100;
	}
}

/* Styles for comments colored by the user */
// We add g. at the front of each selector below to override any color set
// by a class provided for the comment by the host application. The
// assumption is, the user would prefer the color they set in the UI to
// override any color provided by the host app.
g.bkg-col-white-0 {
	@include d3-comment-color-overrides($white-0);
}
g.bkg-col-yellow-20 {
	@include d3-comment-color-overrides($yellow-20);
}
g.bkg-col-gray-20 {
	@include d3-comment-color-overrides($gray-20);
}
g.bkg-col-green-20 {
	@include d3-comment-color-overrides($green-20);
}
g.bkg-col-teal-20 {
	@include d3-comment-color-overrides($teal-20);
}
g.bkg-col-cyan-20 {
	@include d3-comment-color-overrides($cyan-20);
}
g.bkg-col-red-50 {
	@include d3-comment-color-overrides($red-50);
}
g.bkg-col-orange-40 {
	@include d3-comment-color-overrides($orange-40);
}
g.bkg-col-gray-50 {
	@include d3-comment-color-overrides($gray-50);
}
g.bkg-col-green-50 {
	@include d3-comment-color-overrides($green-50);
}
g.bkg-col-teal-50 {
	@include d3-comment-color-overrides($teal-50);
}
g.bkg-col-cyan-50 {
	@include d3-comment-color-overrides($cyan-50);
}

.d3-comment-selection-highlight {
	stroke-width: 0;
	fill: transparent;
	pointer-events: none;
}

.d3-comment-selection-highlight[data-selected="yes"] {
	stroke: $node-selection-color;
	stroke-dasharray: none; /* Solid line */
	stroke-width: 3;
	fill: transparent;
	pointer-events: none;
}

@mixin d3-comment-markdown {
	// Styles need for HTML elemnets genereted from markdown.
	h1 {
		font-size: 28px;
		font-weight: 500;
	}
	h2 {
		font-size: 22px;
		font-weight: 500;
	}
	h3 {
		font-size: 18px;
		font-weight: 500;
	}
	h4 {
		font-size: 16px;
		font-weight: 500;
	}
	h5 {
		font-size: 14px;
		font-weight: 500;
	}
	h6 {
		font-size: 12px;
		font-weight: 500;
	}
	p {
		font-size: $comment-text-font-size;
		font-weight: $comment-text-font-weight;
		font-family: $comment-text-font-family;
		line-height: $comment-text-line-height;
		letter-spacing: 0.15px;
	}
	hr {
		border-top-color: $ui-03;
	}
	img {
		max-width: 100%;
	}
	blockquote {
		padding: 0 12px;
		border-left: 3px solid $ui-03;
		line-height: 8px;
	}
	code {
		font-size: $comment-text-font-size;
		font-weight: $comment-text-font-weight;
		line-height: $comment-text-line-height;
		background-color: $ui-03;
		border-radius: 4px;
		white-space: pre-wrap;
	}
	pre {
		font-size: $comment-text-font-size;
		font-weight: $comment-text-font-weight;
		line-height: $comment-text-line-height;
		background-color: $ui-02;
		padding: 4px;
		border: 1px solid $ui-03;
		border-radius: 4px;
		white-space: pre-wrap;
		code {
			background-color: $ui-02;
		}
	}
	table {
		width: 100%;
		max-width: 100%;
		margin-bottom: 20px;
		border-spacing: 0;
		border-collapse: collapse;
		box-sizing: border-box;
		text-indent: initial;
		color: $text-01;
		thead {
			@include carbon--type-style("productive-heading-01");
			font-size: 12px;
			display: table-header-group;
			vertical-align: middle;
			border-color: inherit;
			background-color: $ui-03;
			text-align: left;
			tr th {
				padding: 8px;
				border-bottom: 2px solid $ui-03;
			}
		}
		tbody {
			@include carbon--type-style("body-short-01");
			font-size: 12px;
			tr {
				border-bottom: 2px solid $ui-03;
				background-color: $ui-02;
				td {
					padding: 8px;
				}
			}
		}
	}
	li {
		display: list-item;
		margin-top: -7px;
		margin-bottom: -7px;

		&:first-child {
			margin-top: -14px;
		}
		&:last-child {
			margin-bottom: -14px;
		}
		// A paragraph is generated in a list item when a blank line is entered
		// between two if the list items in the input text.
		p {
			margin: 0 0 10px;
			margin-block-start: -14px; // Will keep the paragraph on same line as marker
		}
	}
	ul {
		list-style-type: disc;
		padding-inline-start: 30px;
		line-height: 14px;
		margin-top: 0;
	}
	ul ul {
		list-style-type: circle;
		margin-bottom: -14px;
	}
	ul ol {
		margin-bottom: -14px;
	}
	ul ul ul {
		list-style-type: square;
	}
	ol {
		list-style-type: decimal;
		padding-inline-start: 30px;
		line-height: 14px;
		margin-top: 0;
	}
	ol ol {
		list-style-type: lower-alpha;
		margin-bottom: -14px;
	}
	ol ul {
		margin-bottom: -14px;
	}
	ol ol ol {
		list-style-type: lower-roman;
	}
}

@mixin d3-comment-mixin {
	color: $comment-text-color;
	background-color: transparent;
	font-size: $comment-text-font-size;
	font-weight: $comment-text-font-weight;
	font-family: $comment-text-font-family;
	resize: none;
	border-style: solid;
	border-color: transparent;
	width: 100%;
	height: 100%;
	pointer-events: auto; /* Override the pointer-events: none on the foreignObject container */
	overflow: hidden;
	line-height: $comment-text-line-height;  /* Set so that entry text is displayed the same as display text */
	letter-spacing: 0.15px; /* Keeps letter spacing the same as before changing comments to use foreignObject */
	/* Format text display */
	white-space: pre-wrap;
	word-wrap: normal;
	word-break: break-word;
}

.d3-comment-text {
	@include d3-comment-mixin;
	@include d3-comment-markdown;
	border-width: $comment-text-display-border;
	user-select: none;
}

/* Style for comment text entry when shown in an HTML textarea control. */
.d3-comment-entry {
	@include d3-comment-mixin;
	background-color: $field-01;
	border-width: $comment-text-entry-border;

	&:focus {
		@include d3-text-entry-focus-mixin;
	}
}

/* Link styles */

// Common styles for all links
.d3-link-line,
.d3-link-line-arrow-head {
	fill: none;
	pointer-events: none; // Allow events to go to selection area
}

.d3-comment-link .d3-link-line {
	stroke: $comment-link-color;
	stroke-width: 1;
	stroke-dasharray: 7.3;
}

.d3-comment-link .d3-link-line-arrow-head {
	stroke: $comment-link-color;
	stroke-width: 1;
	stroke-dasharray: 0;
}
.d3-link-decorations-group g rect {
	stroke: transparent;
	stroke-width: 0px;
}

/* 'object link' is the historical name for an association link */
/* This styles is used for association links on a regular data flow canvas */
.d3-object-link .d3-link-line {
	stroke: $object-link-color;
	stroke-width: 2;
	stroke-dasharray: 5.5;
}

/* This style is used for association links which are displayed with the */
/* enableAssocLinkType config variable set to ASSOC_RIGHT_SIDE_CURVE.  */
.d3-association-link .d3-link-line {
	stroke: $association-link-color;
	stroke-width: 2;
}

.d3-data-link .d3-link-line {
	stroke: $data-link-color;
	stroke-width: 2;
}

.d3-data-link .d3-link-line-arrow-head {
	stroke: $data-link-color;
	stroke-width: 2;
	stroke-dasharray: 0; // Ensure arrow head is always solid
}

.d3-link-selection-area {
	fill: none;
	stroke: transparent;
	stroke-width: 12;
	&.d3-extra-width {
		stroke-width: 80;
	}
}

// When pointer hovers over the link this style will be applied.
.d3-link-group:hover .d3-link-line,
.d3-link-group:hover .d3-link-line-arrow-head {
	stroke: $link-highlight-color;
	stroke-width: 2;
}

// Style line and arrow head when link is selected.
.d3-link-group[data-selected] .d3-link-line,
.d3-link-group[data-selected] .d3-link-line-arrow-head {
	stroke: $link-highlight-color;
	stroke-width: 3;
}

// Used when an insertable node is dragged over a link line.
.d3-link-group[data-drag-node-over].d3-data-link .d3-link-line,
.d3-link-group[data-drag-node-over].d3-data-link .d3-link-line-arrow-head,
.d3-link-group[data-selected][data-drag-node-over].d3-data-link .d3-link-line,
.d3-link-group[data-selected][data-drag-node-over].d3-data-link .d3-link-line-arrow-head {
	stroke: $link-highlight-color;
	stroke-width: 5;
}

// Styles for link handles at the start of a link line
.d3-link-handle-start {
	display: none;
	stroke: transparent;
	fill: transparent;
	pointer-events: all;
}

.d3-link-group:hover .d3-link-handle-start,
.d3-link-group[data-selected] .d3-link-handle-start {
	display: inherit;
	stroke: $link-highlight-color;
	fill: $data-link-color;
	pointer-events: all;
}

// Styles for link handles at the end of a link line
.d3-link-handle-end {
	display: none;
	stroke: transparent;
	fill: transparent;
	pointer-events: all;
}

.d3-link-group:hover .d3-link-handle-end,
.d3-link-group[data-selected] .d3-link-handle-end {
	display: inherit;
	stroke: $link-highlight-color;
	fill: $data-link-color;
	pointer-events: all;
}
