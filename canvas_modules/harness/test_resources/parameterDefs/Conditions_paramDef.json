{
  "titleDefinition": {
    "title": "Conditions Test"
  },
  "current_parameters": {
    "columnSelectInputFieldList": [
      "Age",
      "BP"
    ],
    "numberfieldCheckpointInterval": -1,
    "numberfieldImpurity": "entropy",
    "numberfieldMaxBins": null,
    "numberfieldMaxDepth": 7,
    "numberfieldMinInfoGain": 0,
    "numberfieldMinInstancesPerNode": 2,
    "numberfieldSeed": 12345,
    "checkboxTypes": [],
    "oneofselectAnimals": "",
    "oneofselectPets": "turtle",
    "someofselectNumbers": [],
    "checkboxSingle": false,
    "checkboxEnable": false,
    "checkboxDisabled": false,
    "radiosetColor": "blue",
    "apples": 100,
    "lemons": 100,
    "berries": 50,
    "passwordField": "",
    "textfieldName": "",
    "checkboxEnableDesc": false,
    "textareaDescription": [],
    "expressionBox": "ab\ncd\nef",
    "enableColumnSelect": true,
    "columnSelectSharedWithInput": [
      "Sex"
    ],
    "enableSortByTable": true,
    "structuretableSortOrder": [
      [
        "Cholesterol",
        "Ascending"
      ]
    ],
    "showRenameFieldsTable": true,
    "structuretableRenameFields": [
      [
        "Age",
        "age",
        "",
        "string"
      ],
      [
        "BP",
        "BP-1",
        "blood pressure",
        ""
      ]
    ],
    "enableTableLists": false,
    "structurelisteditorListInput": [
      [
        "Hello",
        "World"
      ],
      [
        "one",
        "two"
      ],
      [
        "apple",
        "orange"
      ],
      [
        "ford",
        "honda"
      ]
    ],
    "structurelisteditorTableInput": [
      [
        "Hello",
        "World",
        "string",
        "Readonly phrase"
      ]
    ],
    "field_types": [
      [
        "Age",
        true,
        "integer",
        "continuous"
      ],
      [
        "Sex",
        false,
        "string",
        "ordinal"
      ],
      [
        "BP",
        true,
        "date",
        "continuous"
      ],
      [
        "Cholesterol",
        false,
        "string",
        "nominal"
      ],
      [
        "Na",
        false,
        "double",
        "continuous"
      ],
      [
        "K",
        true,
        "double",
        "continuous"
      ],
      [
        "Drug",
        false,
        "string",
        "nominal"
      ],
      [
        "Cp",
        false,
        "double",
        "continuous"
      ],
      [
        "Returns",
        false,
        "integer",
        "ordinal"
      ],
      [
        "Tag",
        false,
        "string",
        "nominal"
      ]
    ],
    "dummy_types": [
      [
        "Age",
        true,
        "Soccer",
        "Don't show",
        true,
        "some long text description"
      ]
    ],
    "expressionCellTable": [
      [
        "BabyBoomer",
        "Age >= 55"
      ]
    ],
    "expPlaceHolder": ""
  },
  "parameters": [
    {
      "id": "columnSelectInputFieldList",
      "type": "array[string]",
      "default": [],
      "role": "column"
    },
    {
      "id": "numberfieldCheckpointInterval",
      "type": "integer",
      "required": true,
      "default": -1
    },
    {
      "id": "numberfieldImpurity",
      "enum": [
        "gini",
        "entropy"
      ],
      "default": "gini"
    },
    {
      "id": "numberfieldMaxBins",
      "type": "integer",
      "required": true,
      "default": 32
    },
    {
      "id": "numberfieldMaxDepth",
      "type": "integer",
      "default": 5
    },
    {
      "id": "numberfieldMinInfoGain",
      "type": "double",
      "default": 0
    },
    {
      "id": "numberfieldMinInstancesPerNode",
      "type": "integer",
      "default": 1
    },
    {
      "id": "numberfieldSeed",
      "type": "integer",
      "default": 12345
    },
    {
      "id": "checkboxTypes",
      "type": "array[string]",
      "enum": [
        "integer",
        "string",
        "boolean"
      ],
      "default": ""
    },
    {
      "id": "oneofselectAnimals",
      "enum": [
        "lion",
        "bear",
        "wolf",
        "horse",
        "tiger",
        "monkey"
      ]
    },
    {
      "id": "oneofselectPets",
      "enum": [
        "dog",
        "cat",
        "fish",
        "hamster",
        "turtle"
      ],
      "default": "turtle"
    },
    {
      "id": "someofselectNumbers",
      "type": "array[string]",
      "enum": [
        "One",
        "Two",
        "Three",
        "Four",
        "Five",
        "Six",
        "Seven",
        "Eight",
        "Nine",
        "Ten"
      ],
      "default": "Three"
    },
    {
      "id": "checkboxSingle",
      "type": "boolean"
    },
    {
      "id": "checkboxEnable",
      "type": "boolean"
    },
    {
      "id": "checkboxDisabled",
      "type": "boolean"
    },
    {
      "id": "radiosetColor",
      "enum": [
        "red",
        "yellow",
        "blue"
      ],
      "default": "red"
    },
    {
      "id": "apples",
      "type": "integer",
      "default": 1000
    },
    {
      "id": "lemons",
      "type": "integer",
      "default": 10
    },
    {
      "id": "berries",
      "type": "double",
      "default": 50
    },
    {
      "id": "passwordField",
      "type": "password",
      "default": "",
      "role": "new_column"
    },
    {
      "id": "textfieldName",
      "type": "string",
      "default": "",
      "role": "new_column"
    },
    {
      "id": "checkboxEnableDesc",
      "type": "boolean",
      "enum": [
        "Add Description"
      ],
      "default": ""
    },
    {
      "id": "textareaDescription",
      "type": "array[string]",
      "default": "",
      "required": true,
      "role": "new_column"
    },
    {
      "id": "expressionBox",
      "type": "string",
      "default": "",
      "role": "expression"
    },
    {
      "id": "enableColumnSelect",
      "type": "boolean",
      "default": ""
    },
    {
      "id": "columnSelectSharedWithInput",
      "type": "array[string]",
      "default": [],
      "role": "column"
    },
    {
      "id": "enableSortByTable",
      "type": "boolean",
      "default": ""
    },
    {
      "id": "structuretableSortOrder",
      "type": "array[structuretableSortOrder]"
    },
    {
      "id": "showRenameFieldsTable",
      "type": "boolean",
      "default": ""
    },
    {
      "id": "structuretableRenameFields",
      "type": "map[string,structuretableRenameFields]",
      "role": "column",
      "default": []
    },
    {
      "id": "enableTableLists",
      "type": "boolean",
      "default": ""
    },
    {
      "id": "structurelisteditorListInput",
      "type": "array[structurelisteditorListInput]",
      "required": true,
      "default": []
    },
    {
      "id": "structurelisteditorTableInput",
      "type": "array[structurelisteditorTableInput]",
      "default": []
    },
    {
      "id": "field_types",
      "type": "map[string,FieldStorageEntry]",
      "role": "column",
      "default": []
    },
    {
      "id": "dummy_types",
      "type": "map[string,DummyEntry]",
      "role": "column",
      "default": []
    },
    {
      "id": "expressionCellTable",
      "type": "array[expressionCellTable]",
      "default": []
    },
    {
      "id": "expPlaceHolder",
      "type": "string",
      "role": "expression"
    },
    {
      "id": "expDefault",
      "type": "string",
      "default": "SELECT * FROM __THIS__",
      "role": "expression"
    }
  ],
  "complex_types": [
    {
      "id": "structuretableSortOrder",
      "key_definition": {
        "id": "field",
        "type": "string",
        "role": "column",
        "default": ""
      },
      "parameters": [
        {
          "id": "structuretable_sort_order",
          "enum": [
            "Ascending",
            "Descending"
          ],
          "default": "Ascending"
        }
      ]
    },
    {
      "id": "structuretableRenameFields",
      "key_definition": {
        "id": "field",
        "type": "string",
        "role": "column"
      },
      "parameters": [
        {
          "id": "new_name",
          "type": "string",
          "role": "new_column"
        },
        {
          "id": "new_label",
          "type": "string",
          "default": ""
        },
        {
          "id": "new_type",
          "enum": [
            "string",
            "number",
            "boolean",
            "time",
            "date"
          ],
          "default": "string"
        }
      ]
    },
    {
      "id": "structurelisteditorListInput",
      "parameters": [
        {
          "id": "name",
          "type": "string",
          "role": "new_column"
        },
        {
          "id": "description",
          "type": "string",
          "role": "new_column"
        }
      ]
    },
    {
      "id": "structurelisteditorTableInput",
      "parameters": [
        {
          "id": "name",
          "type": "string",
          "role": "new_column"
        },
        {
          "id": "description",
          "type": "string",
          "role": "new_column"
        },
        {
          "id": "data_type",
          "enum": [
            "string",
            "number",
            "boolean",
            "time",
            "date"
          ],
          "default": ""
        },
        {
          "id": "readonly",
          "type": "string"
        }
      ]
    },
    {
      "id": "FieldStorageEntry",
      "key_definition": {
        "id": "field",
        "type": "string",
        "role": "column"
      },
      "parameters": [
        {
          "id": "override",
          "type": "boolean"
        },
        {
          "id": "storage",
          "enum": [
            "string",
            "integer",
            "double",
            "date",
            "time",
            "timestamp",
            "password",
            "structure"
          ]
        },
        {
          "id": "measure",
          "enum": [
            "continuous",
            "nominal",
            "ordinal",
            "recordId",
            "flag"
          ]
        }
      ]
    },
    {
      "id": "expressionCellTable",
      "parameters": [
        {
          "id": "valueName",
          "type": "string",
          "default": "Value",
          "role": "new_column"
        },
        {
          "id": "condition",
          "type": "string",
          "default": "",
          "role": "expression"
        }
      ]
    },
    {
      "id": "DummyEntry",
      "key_definition": {
        "id": "field",
        "type": "string",
        "role": "column"
      },
      "parameters": [
        {
          "id": "override",
          "type": "boolean",
          "default": false
        },
        {
          "id": "dummy_entry_sport_name",
          "enum": [
            "Football",
            "Soccer"
          ],
          "default": "Soccer"
        },
        {
          "id": "dummy_entry_invisble",
          "type": "string",
          "default": "Don't show"
        },
        {
          "id": "checkit",
          "type": "boolean",
          "default": false
        },
        {
          "id": "sometext",
          "type": "string",
          "default": "Type something here..."
        }
      ]
    }
  ],
  "uihints": {
    "id": "Conditions.test",
    "icon": "images/nodes/model.svg",
    "label": {
      "default": "Conditions Test"
    },
    "description": {
      "default": "Test condition handling in controls"
    },
    "parameter_info": [
      {
        "parameter_ref": "columnSelectInputFieldList",
        "label": {
          "default": "Column Select Input"
        },
        "description": {
          "default": "Select one or more input columns"
        },
        "rows": 3
      },
      {
        "parameter_ref": "numberfieldCheckpointInterval",
        "label": {
          "default": "Checkpoint Interval"
        },
        "description": {
          "default": "Set checkpoint interval (>= 1) or disable checkpoint (-1). Ex) 10 means that the cache will get checkpointed every 10 iterations"
        }
      },
      {
        "parameter_ref": "numberfieldImpurity",
        "label": {
          "default": "Impurity"
        },
        "description": {
          "default": "Criterion used for information gain calculation (case-insensitive). Supported: \"entropy\" and \"gini\""
        },
        "orientation": "vertical"
      },
      {
        "parameter_ref": "numberfieldMaxBins",
        "label": {
          "default": "Maximum number of bins"
        },
        "description": {
          "default": "Maximum number of bins used for discretizing continuous features and for choosing how to split on features at each node. More bins give higher granularity. Must be >= 2 and >= number of categories in any categorical feature"
        },
        "summary": true
      },
      {
        "parameter_ref": "numberfieldMaxDepth",
        "label": {
          "default": "Maximum depth of the tree"
        },
        "description": {
          "default": "Maximum depth of the tree (>= 0). Ex) depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes"
        },
        "summary": true
      },
      {
        "parameter_ref": "numberfieldMinInfoGain",
        "label": {
          "default": "Minimum information gain"
        },
        "description": {
          "default": "Minimum information gain for a split to be considered at a tree node"
        }
      },
      {
        "parameter_ref": "numberfieldMinInstancesPerNode",
        "label": {
          "default": "Minimum instances per node"
        },
        "description": {
          "default": "Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid (>= 1)"
        }
      },
      {
        "parameter_ref": "numberfieldSeed",
        "label": {
          "default": "Seed"
        },
        "description": {
          "default": "Random seed"
        },
        "number_generator": {
          "label": {
            "default": "Generate",
            "resource_key": "numberGenerator"
          },
          "range": {
            "min": 1000000,
            "max": 9999999
          }
        }
      },
      {
        "parameter_ref": "radiosetColor",
        "label": {
          "default": "Color"
        },
        "description": {
          "default": "Pick a color"
        },
        "orientation": "horizontal"
      },
      {
        "parameter_ref": "apples",
        "label": {
          "default": "Apples"
        },
        "description": {
          "default": "Number of Apples"
        }
      },
      {
        "parameter_ref": "lemons",
        "label": {
          "default": "Lemons"
        },
        "description": {
          "default": "Number of Lemons"
        }
      },
      {
        "parameter_ref": "berries",
        "label": {
          "default": "Berries"
        },
        "description": {
          "default": "Number of Berries"
        }
      },
      {
        "parameter_ref": "checkboxSingle",
        "label": {
          "default": "Single Checkbox"
        },
        "description": {
          "default": "Single Checkbox"
        }
      },
      {
        "parameter_ref": "checkboxEnable",
        "label": {
          "default": "Enable"
        },
        "description": {
          "default": "Check to enable 'Disabled' and 'Color' controls"
        }
      },
      {
        "parameter_ref": "checkboxDisabled",
        "label": {
          "default": "Disabled"
        },
        "description": {
          "default": "Uncheck 'Enable' to disable"
        }
      },
      {
        "parameter_ref": "checkboxTypes",
        "label": {
          "default": "Data Types"
        },
        "description": {
          "default": "Choose a data type with 'Single Checkbox' unchecked to show error.  Leave all data types unchecked to show warning."
        }
      },
      {
        "parameter_ref": "someofselectNumbers",
        "label": {
          "default": "Number"
        },
        "description": {
          "default": "Choose your numbers"
        }
      },
      {
        "parameter_ref": "oneofselectAnimals",
        "label": {
          "default": "Animals"
        },
        "description": {
          "default": "Pick 'lion' to hide 'Pets'. Pick 'tiger' to show warning."
        }
      },
      {
        "parameter_ref": "oneofselectPets",
        "label": {
          "default": "Pets"
        },
        "description": {
          "default": "Pick a pet"
        }
      },
      {
        "parameter_ref": "passwordField",
        "label": {
          "default": "Password"
        },
        "description": {
          "default": "Enter your password.  Set blank to show error."
        }
      },
      {
        "parameter_ref": "textfieldName",
        "label": {
          "default": "Name"
        },
        "description": {
          "default": "Enter your name to enable 'Expression'. Expression will be hidden if set to 'hide expression box'"
        }
      },
      {
        "parameter_ref": "checkboxEnableDesc",
        "label": {
          "default": "Add Description"
        },
        "description": {
          "default": "Add Description"
        }
      },
      {
        "parameter_ref": "textareaDescription",
        "label": {
          "default": "Description"
        },
        "description": {
          "default": "Enter a description"
        }
      },
      {
        "parameter_ref": "expressionBox",
        "label": {
          "default": "Expression"
        },
        "description": {
          "default": "Expression box"
        }
      },
      {
        "parameter_ref": "enableColumnSelect",
        "label": {
          "default": "enable"
        },
        "description": {
          "default": "Enable table"
        }
      },
      {
        "parameter_ref": "columnSelectSharedWithInput",
        "label": {
          "default": "Column Select Shared with Sort",
          "resource_key": "columnSelectSharedWithInput.label"
        },
        "description": {
          "default": "Shared input list with below control",
          "placement": "on_panel"
        },
        "rows": 3
      },
      {
        "parameter_ref": "enableSortByTable",
        "label": {
          "default": "enable"
        },
        "description": {
          "default": "Enable table"
        }
      },
      {
        "parameter_ref": "structuretableSortOrder",
        "required": true,
        "label": {
          "default": "Sort by"
        },
        "description": {
          "default": "Use arrows to reorder the sorting priority",
          "placement": "on_panel"
        },
        "rows": 10
      },
      {
        "parameter_ref": "showRenameFieldsTable",
        "label": {
          "default": "Show Rename Fields Table"
        },
        "description": {
          "default": "Show Rename Fields Table"
        }
      },
      {
        "parameter_ref": "structuretableRenameFields",
        "label": {
          "default": "Rename Field"
        },
        "description": {
          "default": "Complex table control with inline edit and subpanel edit"
        },
        "rows": 10
      },
      {
        "parameter_ref": "enableTableLists",
        "label": {
          "default": "enable"
        },
        "description": {
          "default": "Enable table"
        }
      },
      {
        "parameter_ref": "structurelisteditorListInput",
        "label": {
          "default": "Complex Table List Input"
        },
        "description": {
          "default": "Complex table control list editor table input"
        }
      },
      {
        "parameter_ref": "structurelisteditorTableInput",
        "label": {
          "default": "Table Input"
        },
        "description": {
          "default": "Complex table control list editor table input"
        }
      },
      {
        "parameter_ref": "field_types",
        "label": {
          "default": "Field Types"
        },
        "description": {
          "default": "Change the type of columns in the active dataset"
        },
        "control": "structuretable",
        "rows": 12
      },
      {
        "parameter_ref": "expressionCellTable",
        "label": {
          "default": "Values"
        },
        "description": {
          "default": "Complex table control list editor table input"
        }
      },
      {
        "parameter_ref": "dummy_types",
        "label": {
          "default": "Some Dummy Types"
        },
        "control": "structuretable",
        "rows": 12
      },
      {
        "parameter_ref": "expPlaceHolder",
        "language": "text/x-hive",
        "label": {
          "default": "PlaceHolder"
        },
        "description": {
          "default": "Expression box with place holder text"
        },
        "place_holder_text": {
          "default": "SELECT * FROM __THIS__"
        }
      },
      {
        "parameter_ref": "expDefault",
        "language": "text/x-hive",
        "label": {
          "default": "Default"
        },
        "description": {
          "default": "Expression box with default value"
        }
      }
    ],
    "complex_type_info": [
      {
        "complex_type_ref": "structuretableSortOrder",
        "moveable_rows": true,
        "key_definition": {
          "parameter_ref": "field",
          "width": 28,
          "label": {
            "resource_key": "structuretableSortOrder.field.label"
          },
          "summary": true
        },
        "parameters": [
          {
            "parameter_ref": "structuretable_sort_order",
            "width": 16,
            "label": {
              "resource_key": "structuretableSortOrder.sort_order.label"
            },
            "description": {
              "resource_key": "structuretableSortOrder.sort_order.desc"
            },
            "control": "toggletext",
            "value_icons": [
              "/images/up-triangle.svg",
              "/images/down-triangle.svg"
            ]
          }
        ]
      },
      {
        "complex_type_ref": "structuretableRenameFields",
        "label": {
          "default": "Rename Subpanel"
        },
        "key_definition": {
          "parameter_ref": "field",
          "label": {
            "resource_key": "structuretableRenameFields.field.label"
          },
          "width": 26,
          "summary": true
        },
        "parameters": [
          {
            "parameter_ref": "new_name",
            "label": {
              "resource_key": "structuretableRenameFields.new_name.label"
            },
            "description": {
              "resource_key": "structuretableRenameFields.new_name.desc"
            },
            "width": 26,
            "edit_style": "inline",
            "filterable": true,
            "summary": true
          },
          {
            "parameter_ref": "new_label",
            "label": {
              "default": "Label"
            },
            "width": 26,
            "edit_style": "subpanel"
          },
          {
            "parameter_ref": "new_type",
            "label": {
              "default": "Type"
            },
            "description": {
              "default": "Select data type"
            },
            "width": 26,
            "edit_style": "inline"
          }
        ]
      },
      {
        "complex_type_ref": "structurelisteditorListInput",
        "moveable_rows": true,
        "parameters": [
          {
            "parameter_ref": "name",
            "filterable": true,
            "label": {
              "default": "Structure Name",
              "resource_key": "structurelisteditorListInput.name.label"
            },
            "width": 20,
            "edit_style": "subpanel",
            "summary": true
          },
          {
            "parameter_ref": "description",
            "sortable": true,
            "label": {
              "resource_key": "structurelisteditorListInput.description.label"
            },
            "width": 20,
            "edit_style": "subpanel"
          }
        ]
      },
      {
        "complex_type_ref": "structurelisteditorTableInput",
        "parameters": [
          {
            "parameter_ref": "name",
            "label": {
              "default": "Structure Name",
              "resource_key": "structurelisteditorTableInput.name.label"
            },
            "description": {
              "resource_key": "structurelisteditorTableInput.name.desc"
            },
            "width": 15,
            "edit_style": "subpanel",
            "summary": true
          },
          {
            "parameter_ref": "description",
            "label": {
              "resource_key": "structurelisteditorTableInput.description.label"
            },
            "description": {
              "resource_key": "structurelisteditorTableInput.description.desc"
            },
            "width": 15,
            "edit_style": "subpanel"
          },
          {
            "parameter_ref": "data_type",
            "label": {
              "default": "Type"
            },
            "width": 15,
            "edit_style": "subpanel"
          },
          {
            "parameter_ref": "readonly",
            "label": {
              "default": "ReadOnly"
            },
            "control": "readonly",
            "width": 20
          }
        ]
      },
      {
        "complex_type_ref": "FieldStorageEntry",
        "add_remove_rows": false,
        "key_definition": {
          "parameter_ref": "field",
          "label": {
            "default": "",
            "resource_key": "FieldStorageEntry.field"
          },
          "width": 26,
          "filterable": true
        },
        "parameters": [
          {
            "parameter_ref": "override",
            "label": {
              "default": "",
              "resource_key": "FieldStorageEntry.override"
            },
            "description": {
              "resource_key": "FieldStorageEntry.override.desc"
            },
            "width": 16,
            "edit_style": "inline"
          },
          {
            "parameter_ref": "storage",
            "label": {
              "default": "",
              "resource_key": "FieldStorageEntry.storage"
            },
            "width": 26,
            "edit_style": "inline",
            "dm_default": "type"
          },
          {
            "parameter_ref": "measure",
            "label": {
              "default": "",
              "resource_key": "FieldStorageEntry.measure"
            },
            "width": 26,
            "edit_style": "inline",
            "dm_default": "measure"
          }
        ]
      },
      {
        "complex_type_ref": "expressionCellTable",
        "row_selection": "single",
        "parameters": [
          {
            "parameter_ref": "valueName",
            "label": {
              "default": "Structure Name",
              "resource_key": "expressionCellTable.name.label"
            },
            "description": {
              "resource_key": "expressionCellTable.name.desc"
            },
            "width": 15,
            "edit_style": "inline",
            "summary": true
          },
          {
            "parameter_ref": "condition",
            "language": "CLEM",
            "label": {
              "resource_key": "expressionCellTable.description.label"
            },
            "description": {
              "resource_key": "expressionCellTable.description.desc"
            },
            "width": 15,
            "edit_style": "on_panel",
            "place_holder_text": {
              "default": "Enter condition expression"
            }
          }
        ]
      },
      {
        "complex_type_ref": "DummyEntry",
        "key_definition": {
          "parameter_ref": "field",
          "width": 10,
          "label": {
            "resource_key": "DummyEntry.field.label"
          },
          "summary": true
        },
        "parameters": [
          {
            "parameter_ref": "override",
            "label": {
              "resource_key": "DummyEntry.override.label"
            },
            "width": 6,
            "edit_style": "inline"
          },
          {
            "parameter_ref": "dummy_entry_sport_name",
            "label": {
              "resource_key": "DummyEntry.dummy_entry_sport_name.label"
            },
            "control": "toggletext",
            "width": 8,
            "edit_style": "inline",
            "value_icons": [
              "/images/up-triangle.svg",
              "/images/down-triangle.svg"
            ],
            "summary": true
          },
          {
            "parameter_ref": "dummy_entry_invisble",
            "label": {
              "default": "Invisible Field"
            },
            "width": 10,
            "edit_style": "inline",
            "visible": false
          },
          {
            "parameter_ref": "checkit",
            "label": {
              "resource_key": "DummyEntry.checkit.label"
            },
            "width": 5,
            "edit_style": "inline"
          },
          {
            "parameter_ref": "sometext",
            "label": {
              "resource_key": "DummyEntry.sometext.label"
            },
            "width": 12,
            "edit_style": "inline",
            "summary": true
          }
        ]
      }
    ],
    "group_info": [
      {
        "id": "Numberfield",
        "label": {
          "default": "Numbers"
        },
        "type": "panels",
        "group_info": [
          {
            "id": "summary-panel",
            "label": {
              "default": "Configure Number Fields"
            },
            "type": "summaryPanel",
            "group_info": [
              {
                "id": "Numberfield",
                "label": {
                  "default": "Numbers"
                },
                "parameter_refs": [
                  "numberfieldMaxBins",
                  "numberfieldMaxDepth",
                  "numberfieldMinInfoGain",
                  "numberfieldMinInstancesPerNode"
                ]
              }
            ]
          },
          {
            "id": "Numberfield",
            "label": {
              "default": "Numbers"
            },
            "parameter_refs": [
              "numberfieldCheckpointInterval",
              "numberfieldImpurity",
              "numberfieldSeed"
            ]
          }
        ]
      },
      {
        "id": "Columns",
        "type": "panels",
        "group_info": [
          {
            "id": "columnAllocator",
            "type": "columnSelection",
            "label": {
              "default": "Columns"
            },
            "parameter_refs": [
              "enableColumnSelect",
              "columnSelectSharedWithInput",
              "columnSelectInputFieldList"
            ]
          }
        ]
      },
      {
        "id": "Selects",
        "label": {
          "default": "Selects"
        },
        "parameter_refs": [
          "checkboxTypes",
          "oneofselectAnimals",
          "oneofselectPets",
          "someofselectNumbers",
          "checkboxSingle",
          "checkboxEnable",
          "checkboxDisabled",
          "radiosetColor"
        ],
        "group_info": [
          {
            "id": "mode-settings",
            "type": "panelSelector",
            "depends_on_ref": "radiosetColor",
            "group_info": [
              {
                "id": "red",
                "parameter_refs": [
                  "apples"
                ]
              },
              {
                "id": "yellow",
                "parameter_refs": [
                  "lemons"
                ]
              },
              {
                "id": "blue",
                "parameter_refs": [
                  "berries"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "Textfields",
        "label": {
          "default": "Textfields"
        },
        "parameter_refs": [
          "passwordField",
          "textfieldName",
          "checkboxEnableDesc",
          "textareaDescription",
          "expressionBox"
        ]
      },
      {
        "id": "expressions",
        "label": {
          "default": "Expressions"
        },
        "parameter_refs": [
          "expPlaceHolder",
          "expDefault"
        ]
      },
      {
        "id": "Tables",
        "type": "panels",
        "group_info": [
          {
            "id": "structuretableSortOrder-summary-panel",
            "label": {
              "default": "Configure Sort Order"
            },
            "type": "summaryPanel",
            "group_info": [
              {
                "id": "structuretableSortOrder",
                "type": "columnSelection",
                "label": {
                  "default": "Columns"
                },
                "parameter_refs": [
                  "enableSortByTable",
                  "structuretableSortOrder"
                ]
              }
            ]
          },
          {
            "id": "structuretableRenameFields-summary-panel",
            "label": {
              "default": "Configure Rename fields"
            },
            "type": "summaryPanel",
            "group_info": [
              {
                "id": "structuretableRenameFields",
                "label": {
                  "default": "Tables"
                },
                "type": "columnSelection",
                "parameter_refs": [
                  "showRenameFieldsTable",
                  "structuretableRenameFields"
                ]
              }
            ]
          },
          {
            "id": "structurelisteditorTableInput-summary-panel",
            "label": {
              "default": "Configure Table Input"
            },
            "type": "summaryPanel",
            "group_info": [
              {
                "id": "Structure Table Inline Control",
                "parameter_refs": [
                  "enableTableLists",
                  "structurelisteditorTableInput",
                  "structurelisteditorListInput"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "More_Tables",
        "type": "panels",
        "label": {
          "default": "More Tables"
        },
        "group_info": [
          {
            "id": "field_types-summary-panel",
            "label": {
              "default": "Configure Field Types"
            },
            "type": "summaryPanel",
            "group_info": [
              {
                "id": "group1",
                "type": "controls",
                "label": {
                  "default": "Fields"
                },
                "parameter_refs": [
                  "field_types"
                ]
              }
            ]
          },
          {
            "id": "dummy_types-summary-panel",
            "label": {
              "default": "Configure Dummy Types"
            },
            "type": "summaryPanel",
            "group_info": [
              {
                "id": "group1",
                "type": "columnSelection",
                "label": {
                  "default": "Columns"
                },
                "parameter_refs": [
                  "dummy_types"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "expressionCellTable-summary-panel",
        "label": {
          "default": "Configure Derive Node"
        },
        "type": "summaryPanel",
        "group_info": [
          {
            "id": "Derive-Node",
            "type": "panels",
            "label": {
              "default": "Derive Node"
            },
            "group_info": [
              {
                "id": "Expression Control Cell",
                "parameter_refs": [
                  "expressionCellTable"
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "conditions": [
    {
      "enabled": {
        "parameter_refs": [
          "columnSelectSharedWithInput",
          "columnSelectInputFieldList"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "enableColumnSelect",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "structuretableSortOrder"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "enableSortByTable",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "structuretableRenameFields"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "showRenameFieldsTable",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "structurelisteditorTableInput",
          "structurelisteditorListInput"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "enableTableLists",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldCheckpointInterval",
          "message": {
            "resource_key": "numberfield_checkpoint_interval_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "parameter_ref": "numberfieldCheckpointInterval",
                "op": "equals",
                "value": -1
              }
            },
            {
              "condition": {
                "parameter_ref": "numberfieldCheckpointInterval",
                "op": "greaterThan",
                "value": 0
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldImpurity",
          "message": {
            "resource_key": "numberfieldImpurity_invalid"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "numberfieldImpurity",
            "op": "notEquals",
            "value": "gini"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldMaxBins",
          "message": {
            "resource_key": "numberfield_max_bins_not_valid"
          }
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "parameter_ref": "numberfieldMaxBins",
                "op": "greaterThan",
                "value": 1
              }
            },
            {
              "condition": {
                "parameter_ref": "numberfieldMaxDepth",
                "op": "isNotEmpty"
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldMinInfoGain",
          "message": {
            "resource_key": "numberfield_min_info_gain_not_equals_min_instance"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "numberfieldMinInfoGain",
            "op": "notEquals",
            "parameter_2_ref": "numberfieldMinInstancesPerNode"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "numberfieldSeed",
          "message": {
            "resource_key": "numberfield_seed_not_valid"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "numberfieldSeed",
            "op": "notEquals",
            "value": null
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "columnSelectInputFieldList",
          "message": {
            "resource_key": "column_select_input_field_list_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "columnSelectInputFieldList",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "columnSelectSharedWithInput",
          "message": {
            "resource_key": "column_select_shared_with_input_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "columnSelectSharedWithInput",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "No data types are selected",
            "resource_key": "checkbox_types_not_empty"
          },
          "focus_parameter_ref": "checkboxTypes"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "checkboxTypes",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Warning: one of select cannot be empty"
          },
          "focus_parameter_ref": "oneofselectAnimals"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "oneofselectAnimals",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Warning: selected tiger",
            "resource_key": "one_of_select_animals_not_empty"
          },
          "focus_parameter_ref": "oneofselectAnimals"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "oneofselectAnimals",
            "op": "notEquals",
            "value": "tiger"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Error: none selected"
          },
          "focus_parameter_ref": "someofselectNumbers"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "someofselectNumbers",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Warning: selected three"
          },
          "focus_parameter_ref": "someofselectNumbers"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "someofselectNumbers",
            "op": "notContains",
            "value": "Three"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "message": {
            "default": "'Single Checkbox' should be checked if a Data Type is selected",
            "resource_key": "checkbox_single_not_empty"
          },
          "focus_parameter_ref": "checkboxSingle"
        },
        "evaluate": {
          "or": [
            {
              "condition": {
                "parameter_ref": "checkboxSingle",
                "op": "equals",
                "value": true
              }
            },
            {
              "and": [
                {
                  "condition": {
                    "parameter_ref": "checkboxTypes",
                    "op": "isEmpty"
                  }
                },
                {
                  "condition": {
                    "parameter_ref": "checkboxSingle",
                    "op": "equals",
                    "value": false
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "radiosetColor"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "checkboxEnable",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "checkboxDisabled"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "checkboxEnable",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Are you sure you want to choose yellow?",
            "resource_key": "radiosetColor"
          },
          "focus_parameter_ref": "radiosetColor"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radiosetColor",
            "op": "notEquals",
            "value": "yellow"
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "oneofselectPets"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "oneofselectAnimals",
            "op": "notContains",
            "value": "lion"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "passwordField",
          "message": {
            "resource_key": "password_not_empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "passwordField",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "expressionBox"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "textfieldName",
            "op": "notEquals",
            "value": "hide expression box"
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "expressionBox"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "textfieldName",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "id": "textfieldtest1",
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Name cannot contain /",
            "resource_key": "textfield_name_not_valid_one"
          },
          "focus_parameter_ref": "textfieldName"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "textfieldName",
            "op": "notContains",
            "value": "/"
          }
        }
      }
    },
    {
      "validation": {
        "id": "textfieldtest2",
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Name cannot contain double or single \"quotes\"",
            "resource_key": "textfield_name_not_valid_two"
          },
          "focus_parameter_ref": "textfieldName"
        },
        "evaluate": {
          "and": [
            {
              "condition": {
                "parameter_ref": "textfieldName",
                "op": "notContains",
                "value": "\""
              }
            },
            {
              "condition": {
                "parameter_ref": "textfieldName",
                "op": "notContains",
                "value": "'"
              }
            }
          ]
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "textareaDescription"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "checkboxEnableDesc",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Description cannot contain /, double or single \"quotes\"",
            "resource_key": "textarea_description_not_valid"
          },
          "focus_parameter_ref": "textareaDescription"
        },
        "evaluate": {
          "and": [
            {
              "condition": {
                "parameter_ref": "textareaDescription",
                "op": "notContains",
                "value": "/"
              }
            },
            {
              "condition": {
                "parameter_ref": "textareaDescription",
                "op": "notContains",
                "value": "\""
              }
            },
            {
              "condition": {
                "parameter_ref": "textareaDescription",
                "op": "notContains",
                "value": "'"
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "id": "textfieldtest3",
        "fail_message": {
          "type": "warning",
          "message": {
            "default": "Name cannot contain password",
            "resource_key": "textfield_name_not_contain_password"
          },
          "focus_parameter_ref": "textfieldName"
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "textfieldName",
            "op": "notContains",
            "parameter_2_ref": "passwordField"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "message": {
            "default": "Expression cannot contain /, double or single \"quotes\"",
            "resource_key": "expression_box_not_valid"
          },
          "focus_parameter_ref": "expressionBox"
        },
        "evaluate": {
          "and": [
            {
              "condition": {
                "parameter_ref": "expressionBox",
                "op": "notContains",
                "value": "/"
              }
            },
            {
              "condition": {
                "parameter_ref": "expressionBox",
                "op": "notContains",
                "value": "\""
              }
            },
            {
              "condition": {
                "parameter_ref": "expressionBox",
                "op": "notContains",
                "value": "'"
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "structuretableSortOrder",
          "message": {
            "default": "table cannot be empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "structuretableSortOrder",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "structuretableRenameFields",
          "message": {
            "resource_key": "structuretable_rename_fields_not_contains_pw"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "structuretableRenameFields",
            "op": "notContains",
            "value": "pw"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "structuretableRenameFields[1]",
          "message": {
            "default": "The given column name is already in use"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "structuretableRenameFields[1]",
            "op": "colNotExists"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "structurelisteditorTableInput",
          "message": {
            "default": "table cannot be empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "structurelisteditorTableInput",
            "op": "isNotEmpty"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "expressionCellTable",
          "message": {
            "default": "table cannot be empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "expressionCellTable",
            "op": "notEquals",
            "value": []
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "field_types[2]"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "field_types[1]",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "field_types[3]"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "field_types[1]",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "validation": {
        "id": "tableInputTest1",
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "structurelisteditorTableInput[0]",
          "message": {
            "default": "name cannot be an existing column name"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "structurelisteditorTableInput[0]",
            "op": "colNotExists"
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "dummy_types[2]"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "dummy_types[1]",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "validation": {
        "id": "tableInputTest2",
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "structurelisteditorTableInput[0]",
          "message": {
            "resource_key": "invalid_subpanel_name",
            "default": "name should not contain pw"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "structurelisteditorTableInput[0]",
            "op": "notContains",
            "value": "pw"
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "dummy_types[4]"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "dummy_types[1]",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "dummy_types[5]"
        ],
        "evaluate": {
          "and": [
            {
              "condition": {
                "parameter_ref": "dummy_types[1]",
                "op": "equals",
                "value": true
              }
            },
            {
              "condition": {
                "parameter_ref": "dummy_types[4]",
                "op": "equals",
                "value": true
              }
            }
          ]
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "data_type",
          "message": {
            "default": "type cannot be empty"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "data_type",
            "op": "isNotEmpty"
          }
        }
      }
    }
  ],
  "dataset_metadata": [
    {
      "fields": [
        {
          "name": "Age",
          "type": "integer",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "Sex",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "BP",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Cholesterol",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Na",
          "type": "double",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "K",
          "type": "double",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "Drug",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Ag",
          "type": "integer",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "Age2",
          "type": "integer",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "Sex2",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "BP2",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Cholesterol2",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Na2",
          "type": "double",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "K2",
          "type": "double",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        },
        {
          "name": "Drug2",
          "type": "string",
          "metadata": {
            "description": "",
            "measure": "discrete",
            "modeling_role": "input"
          }
        },
        {
          "name": "Ag2",
          "type": "integer",
          "metadata": {
            "description": "",
            "measure": "range",
            "modeling_role": "input"
          }
        }
      ]
    }
  ],
  "resources": {
    "columnSelectInputFieldList.label": "Column Select Input columns",
    "columnSelectInputFieldList.desc": "Select one or more input columns",
    "column_select_input_field_list_not_empty": "Select one or more input fields. This is sample text to show how an error or warning message will display text if provided a long description",
    "column_select_shared_with_input_not_empty": "Warning: empty tables",
    "numberfieldCheckpointInterval.label": "Checkpoint Interval",
    "numberfieldCheckpointInterval.desc": "Set checkpoint interval (>= 1) or disable checkpoint (-1). Ex) 10 means that the cache will get checkpointed every 10 iterations",
    "numberfieldImpurity.label": "Impurity",
    "numberfieldImpurity.desc": "Criterion used for information gain calculation (case-insensitive). Supported: \"entropy\" and \"gini\"",
    "numberfieldImpurity.gini.label": "gini",
    "numberfieldImpurity.entropy.label": "entropy",
    "numberfieldMaxBins.label": "Maximum number of bins",
    "numberfieldMaxBins.desc": "Maximum number of bins used for discretizing continuous features and for choosing how to split on features at each node. More bins give higher granularity. Must be >= 2 and >= number of categories in any categorical feature",
    "numberfieldMaxDepth.label": "Maximum depth of the tree",
    "numberfieldMaxDepth.desc": "Maximum depth of the tree (>= 0). Ex) depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes",
    "numberfieldMinInfoGain.label": "Minimum information gain",
    "numberfieldMinInfoGain.desc": "Minimum information gain for a split to be considered at a tree node",
    "numberfieldMinInstancesPerNode.label": "Minimum instances per node",
    "numberfieldMinInstancesPerNode.desc": "Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid (>= 1)",
    "numberfieldSeed.label": "Seed",
    "numberfieldSeed.desc": "Random seed",
    "numberfield_checkpoint_interval_not_valid": "The checkpoint interval value must either be >= 1 or -1 to disable",
    "numberfieldImpurity_invalid": "invalid: gini is selected",
    "numberfield_max_bins_not_valid": "Maximum number of bins must be >= 2 or Maximum depth cannot be empty",
    "numberfield_min_instances_per_node_not_valid": "The minimum instances per node value must be >= 1",
    "numberfield_min_info_gain_not_valid": "Cannot be less than 0",
    "numberfield_min_info_gain_not_equals_min_instance": "info gain should not equal min instance",
    "numberfield_seed_not_valid": "Field cannot be null. This is an example of a very long error message that someone might enter. The message text will wrap around to the next line as shown here.",
    "checkboxTypes.label": "Data Types",
    "checkbox_types_not_empty": "No data types are selected",
    "checkbox_single_not_empty": "Checkbox single should be checked if data type is selected",
    "one_of_select_animals_not_empty": "Warning: selected tiger",
    "some_of_select_animals_not_three": "Warning: selected three",
    "password_not_empty": "Password cannot be empty, enter \"password\"",
    "textarea_description_not_valid": "Description cannot contain /, double or single \"quotes\"",
    "textfield_name_not_valid_one": "Name cannot contain /",
    "textfield_name_not_valid_two": "Name cannot contain double or single \"quotes\"",
    "textfield_name_not_contain_password": "password cannot contain name",
    "expression_box_not_valid": "Expression cannot contain /, double or single \"quotes\"",
    "columnSelectSharedWithInput.label": "Input List Shared with Below Control",
    "columnSelectSharedWithInput.desc": "Shared input list with sort by",
    "structuretableSortOrder.label": "Sort",
    "structuretableSortOrder.field.label": "Field",
    "structuretableSortOrder.sort_order.label": "Order",
    "structuretableSortOrder.sort_order.desc": "Update sort order",
    "structuretableSortOrder.sort_order.Ascending.label": "Ascending",
    "structuretableSortOrder.sort_order.Descending.label": "Descending",
    "structuretableRenameFields.rename.label": "Rename Columns",
    "structuretableRenameFields.field.label": "Input name",
    "structuretableRenameFields.new_name.label": "Output name",
    "structuretableRenameFields.new_name.desc": "New field name",
    "structuretable_rename_fields_not_contains_pw": "The 'Output Name' field cannot contain 'pw'",
    "structurelisteditorListInput.name.label": "Name",
    "structurelisteditorListInput.description.label": "Description",
    "structurelisteditorTableInput.name.label": "Name",
    "structurelisteditorTableInput.name.desc": "Enter a name",
    "structurelisteditorTableInput.description.label": "Description",
    "invalid_subpanel_name": "name should not contain pw",
    "invalid_subpanel_description": "description should not contain pw",
    "field_types.label": "",
    "FieldStorageEntry.field": "Field",
    "FieldStorageEntry.override": "Override",
    "FieldStorageEntry.override.desc": "Override storage and measurement type for field",
    "FieldStorageEntry.storage": "Storage",
    "FieldStorageEntry.measure": "Measure",
    "expressionCellTable.name.label": "Set Field To",
    "expressionCellTable.name.desc": "Enter a name",
    "expressionCellTable.description.label": "If This Condition Is True",
    "DummyEntry.field.label": "Field",
    "DummyEntry.override.label": "Override",
    "DummyEntry.dummy_entry_sport_name.label": "Sport",
    "DummyEntry.checkit.label": "Check",
    "DummyEntry.sometext.label": "Text",
    "DummyEntry.dummy_entry_sport_name.Football.label": "Football",
    "DummyEntry.dummy_entry_sport_name.Soccer.label": "Soccer",
    "structurelisteditorTableInput.description.desc": "Enter a description"
  }
}
