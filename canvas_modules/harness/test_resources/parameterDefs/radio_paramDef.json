{
  "titleDefinition": {
    "title": "Radio Set"
  },
  "current_parameters": {
    "radioString": "entropy",
    "radioBooleanWithEnum": true,
    "radioBooleanWithoutEnum": true,
    "radioBooleanWithLabels": false,
    "radioInteger": 2,
    "radioDouble": 1.23,
    "radioNull": null,
    "radioLabelWrapped": "firstN",
    "radioError": "gini",
    "radioWarning": "gini",
    "disable": true,
    "radioDisable": "gini",
    "radioDisableSome": "apples",
    "hide": true,
    "radioHidden": "gini",
    "filter": false,
    "radioFilter": "yellow",
    "filterDefault": false,
    "radioFilterDefault": "yellow",
    "radioset_table_error": [
      [
        "dog",
        "pear",
        false,
        "red"
      ]
    ]
  },
  "parameters": [
    {
      "id": "radioString",
      "enum": [
        "gini",
        "entropy"
      ],
      "required": true
    },
    {
      "id": "radioBooleanWithEnum",
      "enum": [
        true,
        false
      ],
      "type": "boolean",
      "required": true
    },
    {
      "id": "radioBooleanWithoutEnum",
      "type": "boolean",
      "required": true
    },
    {
      "id": "radioBooleanWithLabels",
      "type": "boolean",
      "required": true
    },
    {
      "id": "radioInteger",
      "enum": [
        1,
        2,
        3,
        4
      ],
      "type": "integer",
      "required": true
    },
    {
      "id": "radioDouble",
      "enum": [
        2.34,
        3.23,
        1.23,
        5.32,
        6.78,
        10.22,
        11.34
      ],
      "type": "double",
      "required": true
    },
    {
      "id": "radioDefault",
      "enum": [
        23,
        32
      ],
      "default": 23,
      "type": "integer",
      "required": true
    },
    {
      "id": "radioUndefined",
      "enum": [
        "gini",
        "entropy"
      ],
      "required": true
    },
    {
      "id": "radioNull",
      "enum": [
        "gini",
        "entropy"
      ],
      "required": true
    },
    {
      "id": "radioLabelWrapped",
      "enum": [
        "firstN",
        "oneInN",
        "longLabel"
      ],
      "required": true
    },
    {
      "id": "radioError",
      "enum": [
        "gini",
        "entropy"
      ],
      "required": true
    },
    {
      "id": "radioWarning",
      "enum": [
        "gini",
        "entropy"
      ],
      "required": true
    },
    {
      "id": "disable",
      "type": "boolean"
    },
    {
      "id": "radioDisable",
      "enum": [
        "gini",
        "entropy"
      ],
      "required": true
    },
    {
      "id": "disable_one",
      "type": "boolean",
      "default": false
    },
    {
      "id": "disable_two",
      "type": "boolean",
      "default": false
    },
    {
      "id": "radioDisableSome",
      "enum": [
        "apples",
        "oranges",
        "pears",
        "persimmons"
      ],
      "default": "oranges",
      "required": false
    },
    {
      "id": "hide",
      "type": "boolean"
    },
    {
      "id": "radioHidden",
      "enum": [
        "gini",
        "entropy"
      ],
      "required": true
    },
    {
      "id": "filter",
      "type": "boolean"
    },
    {
      "id": "radioFilter",
      "enum": [
        "red",
        "green",
        "blue",
        "yellow"
      ],
      "required": true
    },
    {
      "id": "filterDefault",
      "type": "boolean"
    },
    {
      "id": "radioFilterDefault",
      "enum": [
        "red",
        "green",
        "blue",
        "yellow"
      ],
      "default": "blue"
    },
    {
      "id": "radioset_table_error",
      "type": "array[radioset_table]",
      "default": []
    }
  ],
  "complex_types": [
    {
      "id": "radioset_table",
      "parameters": [
        {
          "id": "radioset_col1",
          "enum": [
            "dog",
            "cat",
            "pig",
            "horse"
          ],
          "default": "horse"
        },
        {
          "id": "radioset_col2",
          "enum": [
            "apple",
            "orange",
            "pear",
            "strawberry"
          ]
        },
        {
          "id": "radioset_col2_checkbox",
          "type": "boolean",
          "default": false
        },
        {
          "id": "radioset_col3",
          "enum": [
            "red",
            "green",
            "blue",
            "purple",
            "orange",
            "brown"
          ],
          "default": "red"
        }
      ]
    }
  ],
  "uihints": {
    "id": "radioSet",
    "icon": "images/default.svg",
    "label": {
      "default": "Radio Set"
    },
    "parameter_info": [
      {
        "parameter_ref": "radioString",
        "label": {
          "default": "Radio String"
        },
        "description": {
          "default": "RadioSet with enum string type"
        },
        "resource_key": "withradioString",
        "class_name": "radioset-control-class"
      },
      {
        "parameter_ref": "radioBooleanWithEnum",
        "label": {
          "default": "Radio Boolean with Enum"
        },
        "description": {
          "default": "RadioSet with enum boolean type"
        },
        "label_visible": true,
        "control": "radioset",
        "resource_key": "withradioBoolean"
      },
      {
        "parameter_ref": "radioBooleanWithoutEnum",
        "label": {
          "default": "Radio Boolean without Enum"
        },
        "description": {
          "default": "RadioSet without enum boolean type"
        },
        "label_visible": true,
        "control": "radioset"
      },
      {
        "parameter_ref": "radioBooleanWithLabels",
        "label": {
          "default": "Radio Boolean with Labels"
        },
        "description": {
          "default": "RadioSet of boolean type with labels"
        },
        "label_visible": true,
        "control": "radioset",
        "resource_key": "radioBooleanWithLabels"
      },
      {
        "parameter_ref": "radioInteger",
        "label": {
          "default": "Radio Number"
        },
        "description": {
          "default": "RadioSet with enum number type"
        },
        "control": "radioset",
        "orientation": "vertical"
      },
      {
        "parameter_ref": "radioDouble",
        "label": {
          "default": "Radio Double"
        },
        "description": {
          "default": "RadioSet with enum double type"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "radioDefault",
        "label": {
          "default": "Radio Default"
        },
        "description": {
          "default": "RadioSet with enum double type and default value"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "radioUndefined",
        "label": {
          "default": "Radio Undefined"
        },
        "description": {
          "default": "Undefined RadioSet with enum string type"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "radioNull",
        "label": {
          "default": "Radio Null"
        },
        "description": {
          "default": "Null RadioSet with enum string type"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "radioLabelWrapped",
        "label": {
          "default": "Radio Label Wrapped"
        },
        "description": {
          "default": "RadioSet with radio label wrapped"
        },
        "control": "radioset",
        "resource_key": "withradioLabelWrapped"
      },
      {
        "parameter_ref": "radioError",
        "label": {
          "default": "Radio Error"
        },
        "description": {
          "default": "RadioError with enum string type"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "radioWarning",
        "label": {
          "default": "Radio Warning"
        },
        "description": {
          "default": "RadioWarning with enum string type"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "disable",
        "label": {
          "default": "Disable 'Radio Disabled'"
        }
      },
      {
        "parameter_ref": "radioDisable",
        "label": {
          "default": "Radio Disabled"
        },
        "description": {
          "default": "Disabled RadioSet with enum string type"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "disable_one",
        "label": {
          "default": "Disable one of 'Radio Some Disabled'"
        }
      },
      {
        "parameter_ref": "disable_two",
        "label": {
          "default": "Disable two of 'Radio Some Disabled'"
        }
      },
      {
        "parameter_ref": "radioDisableSome",
        "label": {
          "default": "Radio Some Disabled"
        },
        "description": {
          "default": "Some disabled RadioSet items"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "hide",
        "label": {
          "default": "Hide 'Radio Hidden'"
        }
      },
      {
        "parameter_ref": "radioHidden",
        "label": {
          "default": "Radio Hidden"
        },
        "description": {
          "default": "Hidden RadioSet with enum string type"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "filter",
        "label": {
          "default": "Filter radio set"
        },
        "description": {
          "default": "Filter out the 'green' radio"
        }
      },
      {
        "parameter_ref": "radioFilter",
        "label": {
          "default": "Radio Filter"
        },
        "description": {
          "default": "Filtered by controlling checkbox"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "filterDefault",
        "label": {
          "default": "Filter radio set default"
        },
        "description": {
          "default": "Filter out the 'green' radio"
        }
      },
      {
        "parameter_ref": "radioFilterDefault",
        "label": {
          "default": "Radio Filter Default"
        },
        "description": {
          "default": "Filtered by controlling checkbox.  Will default the value to 'blue'"
        },
        "control": "radioset"
      },
      {
        "parameter_ref": "radioset_table_error",
        "label": {
          "default": "Radioset in a table errors"
        },
        "description": {
          "default": "Radioset in a table errors"
        },
        "text_before": {
          "default": "To generate an error:  pet = pig || fruit = strawberry || color = purple"
        },
        "text_after": {
          "default": "To disable the color orange: select pet = cat"
        }
      }
    ],
    "complex_type_info": [
      {
        "complex_type_ref": "radioset_table",
        "row_selection": "single",
        "parameters": [
          {
            "parameter_ref": "radioset_col1",
            "label": {
              "default": "Pet inline."
            },
            "description": {
              "default": "Should default to oneofselect when enum is inline."
            },
            "width": 10,
            "edit_style": "inline",
            "class_name": "table-radioset-control-class"
          },
          {
            "parameter_ref": "radioset_col2",
            "label": {
              "default": "Fruit on-panel"
            },
            "description": {
              "default": "Fruit"
            },
            "width": 10,
            "edit_style": "on_panel",
            "class_name": "table-on-panel-radioset-control-class"
          },
          {
            "parameter_ref": "radioset_col2_checkbox",
            "label": {
              "default": "Disable 'pear'"
            },
            "description": {
              "default": "Disabler"
            },
            "width": 10,
            "edit_style": "on_panel",
            "control": "checkbox"
          },
          {
            "parameter_ref": "radioset_col3",
            "control": "radioset",
            "label": {
              "default": "color"
            },
            "description": {
              "default": "color subpanel"
            },
            "width": 10,
            "edit_style": "subpanel",
            "class_name": "table-subpanel-radioset-control-class"
          }
        ]
      }
    ],
    "group_info": [
      {
        "id": "radio-values",
        "label": {
          "default": "Values"
        },
        "type": "controls",
        "parameter_refs": [
          "radioString",
          "radioBooleanWithEnum",
          "radioBooleanWithoutEnum",
          "radioBooleanWithLabels",
          "radioInteger",
          "radioDouble",
          "radioDefault",
          "radioUndefined",
          "radioNull",
          "radioLabelWrapped"
        ]
      },
      {
        "id": "radio-conditions",
        "label": {
          "default": "Conditions"
        },
        "type": "controls",
        "parameter_refs": [
          "radioError",
          "radioWarning",
          "disable",
          "radioDisable",
          "disable_one",
          "disable_two",
          "radioDisableSome",
          "hide",
          "radioHidden"
        ]
      },
      {
        "id": "radio-filters",
        "label": {
          "default": "Filters"
        },
        "type": "controls",
        "parameter_refs": [
          "filter",
          "radioFilter",
          "filterDefault",
          "radioFilterDefault"
        ]
      },
      {
        "id": "radioset-tables",
        "label": {
          "default": "Table"
        },
        "type": "panels",
        "group_info": [
          {
            "id": "radioset_table-error-panel",
            "type": "summaryPanel",
            "label": {
              "default": "radioset in a table"
            },
            "group_info": [
              {
                "id": "radioset_table_error",
                "parameter_refs": [
                  "radioset_table_error"
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "conditions": [
    {
      "validation": {
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "radioError",
          "message": {
            "default": "Needs to be gini"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radioError",
            "op": "equals",
            "value": "gini"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "radioWarning",
          "message": {
            "default": "Needs to be gini"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radioWarning",
            "op": "equals",
            "value": "gini"
          }
        }
      }
    },
    {
      "validation": {
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "radioDisable",
          "message": {
            "default": "Needs to be gini"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radioDisable",
            "op": "equals",
            "value": "gini"
          }
        }
      }
    },
    {
      "visible": {
        "parameter_refs": [
          "radioHidden"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "hide",
            "op": "equals",
            "value": false
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "radioDisable"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "disable",
            "op": "equals",
            "value": false
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "radioDisableSome"
        ],
        "values": [
          "apples"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "disable_one",
            "op": "equals",
            "value": false
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "radioDisableSome"
        ],
        "values": [
          "oranges",
          "persimmons"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "disable_two",
            "op": "equals",
            "value": false
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "radioset_table_error[1]"
        ],
        "values": [
          "pear"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "radioset_table_error[2]",
            "op": "equals",
            "value": false
          }
        }
      }
    },
    {
      "enabled": {
        "parameter_refs": [
          "radioset_table_error[3]"
        ],
        "values": [
          "orange"
        ],
        "evaluate": {
          "condition": {
            "parameter_ref": "radioset_table_error[0]",
            "op": "notEquals",
            "value": "cat"
          }
        }
      }
    },
    {
      "enum_filter": {
        "target": {
          "parameter_ref": "radioFilter",
          "values": [
            "red",
            "blue"
          ]
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "filter",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "enum_filter": {
        "target": {
          "parameter_ref": "radioFilter",
          "values": [
            "red",
            "blue",
            "green"
          ]
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "filter",
            "op": "equals",
            "value": false
          }
        }
      }
    },
    {
      "enum_filter": {
        "target": {
          "parameter_ref": "radioFilterDefault",
          "values": [
            "red",
            "blue"
          ]
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "filterDefault",
            "op": "equals",
            "value": true
          }
        }
      }
    },
    {
      "validation": {
        "id": "tableerrortest1",
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "radioset_table_error[0]",
          "message": {
            "default": "pet equals pig"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radioset_table_error[0]",
            "op": "notEquals",
            "value": "pig"
          }
        }
      }
    },
    {
      "validation": {
        "id": "tableerrortest2",
        "fail_message": {
          "type": "warning",
          "focus_parameter_ref": "radioset_table_error[1]",
          "message": {
            "default": "fruit equals strawberry"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radioset_table_error[1]",
            "op": "notEquals",
            "value": "strawberry"
          }
        }
      }
    },
    {
      "validation": {
        "id": "tableerrortest3",
        "fail_message": {
          "type": "error",
          "focus_parameter_ref": "radioset_table_error[3]",
          "message": {
            "default": "color equals purple"
          }
        },
        "evaluate": {
          "condition": {
            "parameter_ref": "radioset_table_error[3]",
            "op": "notEquals",
            "value": "purple"
          }
        }
      }
    }
  ],
  "resources": {
    "withradioString.gini.label": "Gini",
    "withradioString.gini.desc": "desc for Gini",
    "withradioString.entropy.label": "Entropy",
    "withradioString.entropy.desc": "desc for Entropy",
    "withradioBoolean.true.label": "trueBoolean",
    "radioInteger.2.desc":"desc for 2",
    "radioInteger.4.desc":"desc for 4",
    "withradioBoolean.false.label": "falseBoolean",
    "radioBooleanWithLabels.true.label": "True Label",
    "radioBooleanWithLabels.false.label": "False Label",
    "withradioLabelWrapped.firstN.label": "First N",
    "withradioLabelWrapped.oneInN.label": "One in N",
    "withradioLabelWrapped.longLabel.label": "This is really a longgggggggggggg label",
    "withradioLabelWrapped.longLabel.desc": "This is really a longgggggggggggg label"
  }
}
