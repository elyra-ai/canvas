{
  "doc_type": "pipeline",
  "version": "3.0",
  "json_schema": "https://api.dataplatform.ibm.com/schemas/common-pipeline/pipeline-flow/pipeline-flow-v3-schema.json",
  "id": "cardinality-pipeline-flow",
  "primary_pipeline": "cardinality-pipline",
  "pipelines": [
    {
      "id": "cardinality-pipline",
      "name": "Cardinality pipeline",
      "nodes": [
        {
          "id": "id8I6RH2V91XW",
          "type": "binding",
          "op": "variablefile",
          "app_data": {
            "ui_data": {
              "label": "Out 0:1",
              "image": "/images/nodes/varfile.svg",
              "x_pos": 105,
              "y_pos": 120,
              "description": "Imports data from a comma-delimited file"
            }
          },
          "outputs": [
            {
              "id": "outPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "outPort"
                }
              }
            }
          ]
        },
        {
          "id": "id123456789",
          "type": "execution_node",
          "op": "dummy_operator",
          "app_data": {
            "ui_data": {
              "label": "In 0:1",
              "image": "/images/nodes/sort.svg",
              "x_pos": 332.5,
              "y_pos": 120,
              "description": "Sorts the data"
            }
          },
          "inputs": [
            {
              "id": "inPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "inPort"
                }
              }
            }
          ],
          "outputs": [
            {
              "id": "outPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "outPort"
                }
              }
            }
          ]
        },
        {
          "id": "nodeIDSuperNodePE",
          "type": "super_node",
          "open_with_tool": "canvas",
          "subflow_ref": {
            "pipeline_id_ref": "modeler-sub-pipeline"
          },
          "app_data": {
            "ui_data": {
              "label": "0:1 & 0:2",
              "image": "useDefaultIcon",
              "x_pos": 332.5,
              "y_pos": 240,
              "class_name": "canvas-node",
              "description": "nodeIDSuperNodePE",
              "is_expanded": false,
              "expanded_width": 200,
              "expanded_height": 200
            }
          },
          "inputs": [
            {
              "id": "InputPort1",
              "subflow_node_ref": "entryID1SE",
              "schema_ref": "schema3",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "InputPort1"
                }
              }
            },
            {
              "id": "InputPort2",
              "subflow_node_ref": "entryID2SE",
              "schema_ref": "schema2",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 2
                  },
                  "label": "InputPort2"
                }
              }
            }
          ],
          "outputs": [
            {
              "id": "output1SuperNodePE",
              "subflow_node_ref": "exitID1SE",
              "schema_ref": "schema2",
              "app_data": {
                "ui_data": {
                  "label": "output1SuperNodePE"
                }
              }
            }
          ]
        },
        {
          "id": "186fd3ef-b660-4c2b-b868-187d3e13d2ad",
          "type": "binding",
          "op": "variablefile",
          "app_data": {
            "ui_data": {
              "label": "Out 0:3",
              "image": "/images/nodes/varfile.svg",
              "x_pos": 105,
              "y_pos": 240,
              "description": "Imports data from a comma-delimited file"
            }
          },
          "outputs": [
            {
              "id": "outPort",
              "schema_ref": "TQRecT",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 3
                  },
                  "label": "outPort"
                }
              }
            }
          ]
        },
        {
          "id": "ct5555555-ee21-41dc-b68d-ec4f5e40a079",
          "type": "binding",
          "op": "variablefile",
          "app_data": {
            "ui_data": {
              "label": "0:1 & 0:-1",
              "image": "/images/nodes/varfile.svg",
              "x_pos": 105,
              "y_pos": 360,
              "description": "Imports data from a comma-delimited file"
            }
          },
          "outputs": [
            {
              "id": "outPort1",
              "schema_ref": "TQRecT",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "outPort1"
                }
              }
            },
            {
              "id": "outPort2",
              "schema_ref": "TQRecT",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": -1
                  },
                  "label": "outPort2"
                }
              }
            }
          ]
        },
        {
          "id": "id987654321",
          "type": "binding",
          "op": "dummy_operator",
          "app_data": {
            "ui_data": {
              "label": "All 0:1",
              "image": "/images/nodes/sort.svg",
              "x_pos": 332.5,
              "y_pos": 360,
              "description": "Sorts the data"
            }
          },
          "inputs": [
            {
              "id": "inPort1",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "inPort1"
                }
              }
            },
            {
              "id": "inPort2",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "inPort2"
                }
              }
            },
            {
              "id": "inPort3",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "inPort3"
                }
              }
            },
            {
              "id": "inPort4",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "inPort4"
                }
              }
            }
          ]
        },
        {
          "id": "90250ef1-3ebc-46a3-9d1a-3e8a4446c794",
          "type": "execution_node",
          "op": "dummy_operator",
          "app_data": {
            "ui_data": {
              "label": "In 0:0",
              "image": "/images/nodes/sort.svg",
              "x_pos": 332.5,
              "y_pos": 480,
              "description": "Sorts the data"
            }
          },
          "inputs": [
            {
              "id": "inPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 0
                  },
                  "label": "inPort"
                }
              }
            }
          ],
          "outputs": [
            {
              "id": "outPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 1
                  },
                  "label": "outPort"
                }
              }
            }
          ]
        },
        {
          "id": "da874d23-3d17-4951-af28-84bbf174e90b",
          "type": "binding",
          "op": "variablefile",
          "app_data": {
            "ui_data": {
              "label": "Out 0:0",
              "image": "/images/nodes/varfile.svg",
              "x_pos": 105,
              "y_pos": 480,
              "description": "Imports data from a comma-delimited file"
            }
          },
          "outputs": [
            {
              "id": "outPort",
              "app_data": {
                "ui_data": {
                  "cardinality": {
                    "min": 0,
                    "max": 0
                  },
                  "label": "outPort"
                }
              }
            }
          ]
        }
      ],
      "app_data": {
        "ui_data": {
          "zoom": {
            "x": 0,
            "y": 0,
            "k": 1
          },
          "comments": [
            {
              "id": "id42ESQA3VPXB",
              "x_pos": 17.5,
              "y_pos": 15,
              "width": 200,
              "height": 76,
              "class_name": "canvas-comment",
              "content": "This canvas shows nodes with different cardinalities for testing to make sure links are not crated when maximum cardinalities are hit.",
              "associated_id_refs": []
            }
          ]
        }
      },
      "runtime_ref": "test_runtime"
    },
    {
      "id": "modeler-sub-pipeline",
      "nodes": [],
      "app_data": {
        "ui_data": {
          "comments": []
        }
      },
      "runtime_ref": "test_runtime"
    }
  ],
  "schemas": [],
  "runtimes": []
}
